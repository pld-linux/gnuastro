--- gnuastro-0.21/doc/gnuastro.texi.orig	2023-10-20 17:11:46.000000000 +0200
+++ gnuastro-0.21/doc/gnuastro.texi	2024-01-14 08:00:13.150076828 +0100
@@ -47,75 +47,75 @@ A copy of the license is included in the
 @end copying
 
 @c To include in the info directory.
-@dircategory Astronomy
+@dircategory Astronomy:
 @direntry
-* Gnuastro: (gnuastro).       GNU Astronomy Utilities.
-* libgnuastro: (gnuastro)Gnuastro library. Full Gnuastro library doc.
+* Gnuastro: (gnuastro).				GNU Astronomy Utilities
+* libgnuastro: (gnuastro)Gnuastro library.	Full Gnuastro library doc
 
-* help-gnuastro: (gnuastro)help-gnuastro mailing list. Getting help.
+* help-gnuastro: (gnuastro)help-gnuastro mailing list. Getting help
 
-* bug-gnuastro: (gnuastro)Report a bug. How to report bugs
+* bug-gnuastro: (gnuastro)Report a bug.		How to report bugs
 
-* Arithmetic: (gnuastro)Arithmetic. Arithmetic operations on pixels.
-* astarithmetic: (gnuastro)Invoking astarithmetic. Options to Arithmetic.
+* Arithmetic: (gnuastro)Arithmetic.		Arithmetic operations on pixels
+* astarithmetic: (gnuastro)astarithmetic.	Options to Arithmetic
 
-* BuildProgram: (gnuastro)BuildProgram. Compile and run programs using Gnuastro's library.
-* astbuildprog: (gnuastro)Invoking astbuildprog. Options to BuildProgram.
+* BuildProgram: (gnuastro)BuildProgram.		Compile and run programs using Gnuastro's library
+* astbuildprog: (gnuastro)astbuildprog.		Options to BuildProgram
 
-* ConvertType: (gnuastro)ConvertType. Convert different file types.
-* astconvertt: (gnuastro)Invoking astconvertt. Options to ConvertType.
+* ConvertType: (gnuastro)ConvertType.		Convert different file types.
+* astconvertt: (gnuastro)astconvertt.		Options to ConvertType.
 
-* Convolve: (gnuastro)Convolve. Convolve an input file with kernel.
-* astconvolve: (gnuastro)Invoking astconvolve. Options to Convolve.
+* Convolve: (gnuastro)Convolve.			Convolve an input file with kernel
+* astconvolve: (gnuastro)astconvolve.		Options to Convolve
 
-* CosmicCalculator: (gnuastro)CosmicCalculator. For cosmological params.
-* astcosmiccal: (gnuastro)Invoking astcosmiccal. Options to CosmicCalculator.
+* CosmicCalculator: (gnuastro)CosmicCalculator.	For cosmological params
+* astcosmiccal: (gnuastro)astcosmiccal.		Options to CosmicCalculator
 
-* Crop: (gnuastro)Crop. Crop region(s) from image(s).
-* astcrop: (gnuastro)Invoking astcrop. Options to Crop.
+* Crop: (gnuastro)Crop.				Crop region(s) from image(s).
+* astcrop: (gnuastro)astcrop.			Options to Crop
 
-* Fits: (gnuastro)Fits. View and manipulate FITS extensions and keywords.
-* astfits: (gnuastro)Invoking astfits. Options to Fits.
+* Fits: (gnuastro)Fits.				View and manipulate FITS extensions and keywords
+* astfits: (gnuastro)astfits.			Options to Fits
 
-* MakeCatalog: (gnuastro)MakeCatalog. Make a catalog from labeled image.
-* astmkcatalog: (gnuastro)Invoking astmkcatalog. Options to MakeCatalog.
+* MakeCatalog: (gnuastro)MakeCatalog.		Make a catalog from labeled image
+* astmkcatalog: (gnuastro)astmkcatalog.		Options to MakeCatalog
 
-* MakeProfiles: (gnuastro)MakeProfiles. Make mock profiles.
-* astmkprof: (gnuastro)Invoking astmkprof. Options to MakeProfiles.
+* MakeProfiles: (gnuastro)MakeProfiles.		Make mock profiles
+* astmkprof: (gnuastro)astmkprof.		Options to MakeProfiles
 
-* Match: (gnuastro)Match. Match two separate catalogs.
-* astmatch: (gnuastro)Invoking astmatch. Options to Match.
+* Match: (gnuastro)Match.			Match two separate catalogs
+* astmatch: (gnuastro)astmatch.			Options to Match
 
-* NoiseChisel: (gnuastro)NoiseChisel. Detect signal in noise.
-* astnoisechisel: (gnuastro)Invoking astnoisechisel. Options to NoiseChisel.
+* NoiseChisel: (gnuastro)NoiseChisel.		Detect signal in noise
+* astnoisechisel: (gnuastro)astnoisechisel.	Options to NoiseChisel
 
-* Segment: (gnuastro)Segment. Segment detections based on signal structure.
-* astsegment: (gnuastro)Invoking astsegment. Options to Segment.
+* Segment: (gnuastro)Segment.			Segment detections based on signal structure
+* astsegment: (gnuastro)astsegment.		Options to Segment
 
-* Query: (gnuastro)Query. Access remote databases for downloading data.
-* astquery: (gnuastro)Invoking astquery. Options to Query.
+* Query: (gnuastro)Query.			Access remote databases for downloading data
+* astquery: (gnuastro)astquery.			Options to Query
 
-* Statistics: (gnuastro)Statistics. Get image Statistics.
-* aststatistics: (gnuastro)Invoking aststatistics. Options to Statistics.
+* Statistics: (gnuastro)Statistics.		Get image Statistics
+* aststatistics: (gnuastro)aststatistics.	Options to Statistics
 
-* Table: (gnuastro)Table. Read and write FITS binary or ASCII tables.
-* asttable: (gnuastro)Invoking asttable. Options to Table.
+* Table: (gnuastro)Table.			Read and write FITS binary or ASCII tables
+* asttable: (gnuastro)asttable.			Options to Table
 
-* Warp: (gnuastro)Warp. Warp a dataset to a new grid.
-* astwarp: (gnuastro)Invoking astwarp. Options to Warp.
+* Warp: (gnuastro)Warp.				Warp a dataset to a new grid
+* astwarp: (gnuastro)astwarp.			Options to Warp
 
-* astscript: (gnuastro)Installed scripts. Gnuastro's installed scripts.
-* astscript-ds9-region: (gnuastro)Invoking astscript-ds9-region. Options to this script
-* astscript-fits-view: (gnuastro)Invoking astscript-fits-view. Options to this script
-* astscript-pointing-simulate: (gnuastro)Invoking astscript-pointing-simulate. Options to this script
-* astscript-psf-scale-factor: (gnuastro)Invoking astscript-psf-scale-factor. Options to this script
-* astscript-psf-select-stars: (gnuastro)Invoking astscript-psf-select-stars. Options to this script
-* astscript-psf-stamp: (gnuastro)Invoking astscript-psf-stamp. Options to this script
-* astscript-psf-subtract: (gnuastro)Invoking astscript-psf-subtract. Options to this script
-* astscript-psf-unite: (gnuastro)Invoking astscript-psf-unite. Options to this script
-* astscript-radial-profile: (gnuastro)Invoking astscript-radial-profile. Options to this script
-* astscript-sort-by-night: (gnuastro)Invoking astscript-sort-by-night. Options to this script
-* astscript-zeropoint: (gnuastro)Invoking astscript-zeropoint. Options to this script
+* astscript: (gnuastro)Installed scripts.				Gnuastro's installed scripts
+* astscript-ds9-region: (gnuastro)astscript-ds9-region.			Options to this script
+* astscript-fits-view: (gnuastro)astscript-fits-view.			Options to this script
+* astscript-pointing-simulate: (gnuastro)astscript-pointing-simulate.	Options to this script
+* astscript-psf-scale-factor: (gnuastro)astscript-psf-scale-factor.	Options to this script
+* astscript-psf-select-stars: (gnuastro)astscript-psf-select-stars.	Options to this script
+* astscript-psf-stamp: (gnuastro)astscript-psf-stamp.			Options to this script
+* astscript-psf-subtract: (gnuastro)astscript-psf-subtract.		Options to this script
+* astscript-psf-unite: (gnuastro)astscript-psf-unite.			Options to this script
+* astscript-radial-profile: (gnuastro)astscript-radial-profile.		Options to this script
+* astscript-sort-by-night: (gnuastro)astscript-sort-by-night.		Options to this script
+* astscript-zeropoint: (gnuastro)astscript-zeropoint.			Options to this script
 @end direntry
 
 
@@ -465,7 +465,7 @@ Data containers
 
 Fits
 
-* Invoking astfits::            Arguments and options to Header.
+* astfits::                     Arguments and options to Header.
 
 Invoking Fits
 
@@ -479,7 +479,7 @@ ConvertType
 * Recognized file formats::     Recognized file formats
 * Color::                       Some explanations on color.
 * Annotations for figure in paper::  Adding coordinates or physical scale.
-* Invoking astconvertt::        Options and arguments to ConvertType.
+* astconvertt::                 Options and arguments to ConvertType.
 
 Color
 
@@ -503,12 +503,12 @@ Table
 * Vector columns::              How to keep more than one value in each column.
 * Column arithmetic::           How to do operations on table columns.
 * Operation precedence in Table::  Order of running options in Table.
-* Invoking asttable::           Options and arguments to Table.
+* asttable::                    Options and arguments to Table.
 
 Query
 
 * Available databases::         List of available databases to Query.
-* Invoking astquery::           Inputs, outputs and configuration of Query.
+* astquery::                    Inputs, outputs and configuration of Query.
 
 Data manipulation
 
@@ -522,7 +522,7 @@ Crop
 * Crop modes::                  Basic modes to define crop region.
 * Crop section syntax::         How to define a section to crop.
 * Blank pixels::                Pixels with no value.
-* Invoking astcrop::            Calling Crop on the command-line
+* astcrop::                     Calling Crop on the command-line
 
 Invoking Crop
 
@@ -536,7 +536,7 @@ Arithmetic
 * Integer benefits and pitfalls::  Integers have benefits, but require care.
 * Noise basics::                Introduction various noise models.
 * Arithmetic operators::        List of operators known to Arithmetic.
-* Invoking astarithmetic::      How to run Arithmetic: options and output.
+* astarithmetic::               How to run Arithmetic: options and output.
 
 Noise basics
 
@@ -575,7 +575,7 @@ Convolve
 * Frequency domain and Fourier operations::  Using frequencies in input.
 * Spatial vs. Frequency domain::  When to use which?
 * Convolution kernel::          How to specify the convolution kernel.
-* Invoking astconvolve::        Options and argument to Convolve.
+* astconvolve::                 Options and argument to Convolve.
 
 Spatial domain convolution
 
@@ -600,7 +600,7 @@ Warp
 * Linear warping basics::       Basics of coordinate transformation.
 * Merging multiple warpings::   How to merge multiple matrices.
 * Resampling::                  Warping an image is re-sampling it.
-* Invoking astwarp::            Arguments and options for Warp.
+* astwarp::                     Arguments and options for Warp.
 
 Invoking Warp
 
@@ -622,7 +622,7 @@ Statistics
 * Sigma clipping::              Definition of @mymath{\sigma}-clipping.
 * Least squares fitting::       Fitting with various parametric functions.
 * Sky value::                   Definition and derivation of the Sky value.
-* Invoking aststatistics::      Arguments and options to Statistics.
+* aststatistics::               Arguments and options to Statistics.
 
 2D Histograms
 
@@ -647,7 +647,7 @@ Invoking Statistics
 NoiseChisel
 
 * NoiseChisel changes after publication::  Updates since published papers.
-* Invoking astnoisechisel::     Options and arguments for NoiseChisel.
+* astnoisechisel::              Options and arguments for NoiseChisel.
 
 Invoking NoiseChisel
 
@@ -657,7 +657,7 @@ Invoking NoiseChisel
 
 Segment
 
-* Invoking astsegment::         Inputs, outputs and options to Segment
+* astsegment::                  Inputs, outputs and options to Segment
 
 Invoking Segment
 
@@ -673,7 +673,7 @@ MakeCatalog
 * Measuring elliptical parameters::  Estimating elliptical parameters.
 * Adding new columns to MakeCatalog::  How to add new columns.
 * MakeCatalog measurements::    List of all the measurements/columns by MakeCatalog.
-* Invoking astmkcatalog::       Options and arguments to MakeCatalog.
+* astmkcatalog::                Options and arguments to MakeCatalog.
 
 Quantifying measurement limits
 
@@ -706,7 +706,7 @@ Invoking MakeCatalog
 Match
 
 * Matching algorithms::         Different ways to find the match
-* Invoking astmatch::           Inputs, outputs and options of Match
+* astmatch::                    Inputs, outputs and options of Match
 
 Data modeling
 
@@ -717,7 +717,7 @@ MakeProfiles
 * Modeling basics::             Astronomical modeling basics.
 * If convolving afterwards::    Considerations for convolving later.
 * Profile magnitude::           Definition of total profile magnitude.
-* Invoking astmkprof::          Inputs and Options for MakeProfiles.
+* astmkprof::                   Inputs and Options for MakeProfiles.
 
 Modeling basics
 
@@ -743,7 +743,7 @@ CosmicCalculator
 
 * Distance on a 2D curved space::  Distances in 2D for simplicity.
 * Extending distance concepts to 3D::  Going to 3D (our real universe).
-* Invoking astcosmiccal::       How to run CosmicCalculator.
+* astcosmiccal::                   How to run CosmicCalculator.
 
 Invoking CosmicCalculator
 
@@ -763,23 +763,23 @@ Installed scripts
 
 Sort FITS files by night
 
-* Invoking astscript-sort-by-night::  Inputs and outputs to this script.
+* astscript-sort-by-night::     Inputs and outputs to this script.
 
 Generate radial profile
 
-* Invoking astscript-radial-profile::  How to call astscript-radial-profile
+* astscript-radial-profile::    How to call astscript-radial-profile
 
 SAO DS9 region files from table
 
-* Invoking astscript-ds9-region::  How to call astscript-ds9-region
+* astscript-ds9-region::        How to call astscript-ds9-region
 
 Viewing FITS file contents with DS9 or TOPCAT
 
-* Invoking astscript-fits-view::  How to call this script
+* astscript-fits-view::         How to call this script
 
 Zero point estimation
 
-* Invoking astscript-zeropoint::  How to call the script
+* astscript-zeropoint::         How to call the script
 
 Invoking astscript-zeropoint
 
@@ -788,16 +788,16 @@ Invoking astscript-zeropoint
 
 Pointing pattern simulation
 
-* Invoking astscript-pointing-simulate::  Options and running mode.
+* astscript-pointing-simulate::  Options and running mode.
 
 PSF construction and subtraction
 
 * Overview of the PSF scripts::  Summary of concepts and methods
-* Invoking astscript-psf-select-stars::  Select good starts within an image.
-* Invoking astscript-psf-stamp::  Make a stamp of each star to stack.
-* Invoking astscript-psf-unite::  Merge stacks of different regions of PSF.
-* Invoking astscript-psf-scale-factor::  Calculate factor to scale PSF to star.
-* Invoking astscript-psf-subtract::  Put the PSF in the image to subtract.
+* astscript-psf-select-stars::   Select good starts within an image.
+* astscript-psf-stamp::          Make a stamp of each star to stack.
+* astscript-psf-unite::          Merge stacks of different regions of PSF.
+* astscript-psf-scale-factor::   Calculate factor to scale PSF to star.
+* astscript-psf-subtract::       Put the PSF in the image to subtract.
 
 Makefile extensions (for GNU Make)
 
@@ -819,7 +819,7 @@ Review of library fundamentals
 
 BuildProgram
 
-* Invoking astbuildprog::       Options and examples for using this program.
+* astbuildprog::                Options and examples for using this program.
 
 Gnuastro library
 
@@ -1047,7 +1047,7 @@ $ sudo make install
 @c The last command is to enable Gnuastro's custom TAB completion in Bash.
 @c For more on this useful feature, see @ref{Shell TAB completion}).
 
-For each program there is an `Invoke ProgramName' sub-section in this book which explains how the programs should be run on the command-line (for example, see @ref{Invoking asttable}).
+For each program there is an `Invoking ProgramName' sub-section in this book which explains how the programs should be run on the command-line (for example, see @ref{asttable}).
 
 In @ref{Tutorials}, we have prepared some complete tutorials with common Gnuastro usage scenarios in astronomical research.
 They even contain links to download the necessary data, and thoroughly describe every step of the process (the science, statistics and optimal usage of the command-line).
@@ -1164,22 +1164,22 @@ The following scripts are used to estima
 
 @table @code
 @item astscript-psf-select-stars
-(see @ref{Invoking astscript-psf-select-stars}) Find all the stars within an image that are suitable for constructing an extended PSF.
+(see @ref{astscript-psf-select-stars}) Find all the stars within an image that are suitable for constructing an extended PSF.
 If the image has WCS, this script can automatically query Gaia to find the good stars.
 
 @item astscript-psf-stamp
-(see @ref{Invoking astscript-psf-stamp}) build a crop (stamp) of a certain width around a star at a certain coordinate in a larger image.
+(see @ref{astscript-psf-stamp}) build a crop (stamp) of a certain width around a star at a certain coordinate in a larger image.
 This script will do sub-pixel re-positioning to make sure the star is centered and can optionally mask all other background sources).
 
 @item astscript-psf-scale-factor
-(see @ref{Invoking astscript-psf-scale-factor}) Given a PSF model, and the central coordinates of a star in an image, find the scale factor that has to be multiplied by the PSF to scale it to that star.
+(see @ref{astscript-psf-scale-factor}) Given a PSF model, and the central coordinates of a star in an image, find the scale factor that has to be multiplied by the PSF to scale it to that star.
 
 @item astscript-psf-unite
-(see @ref{Invoking astscript-psf-unite}) Unite the various components of a PSF into one.
+(see @ref{astscript-psf-unite}) Unite the various components of a PSF into one.
 Because of saturation and non-linearity, to get a good estimate of the extended PSF, it is necessary to construct various parts from different magnitude ranges.
 
 @item astscript-psf-subtract
-(see @ref{Invoking astscript-psf-subtract}) Given the model of a PSF and the central coordinates of a star in the image, do sub-pixel re-positioning of the PSF, scale it to the star and subtract it from the image.
+(see @ref{astscript-psf-subtract}) Given the model of a PSF and the central coordinates of a star in the image, do sub-pixel re-positioning of the PSF, scale it to the star and subtract it from the image.
 @end table
 
 @end table
@@ -2031,7 +2031,7 @@ Finally, in @ref{Pointing pattern design
 In these tutorials, we have intentionally avoided too many cross references to make it more easy to read.
 For more information about a particular program, you can visit the section with the same name as the program in this book.
 Each program section in the subsequent chapters starts by explaining the general concepts behind what it does, for example, see @ref{Convolve}.
-If you only want practical information on running a program, for example, its options/configuration, input(s) and output(s), please consult the subsection titled ``Invoking ProgramName'', for example, see @ref{Invoking astnoisechisel}.
+If you only want practical information on running a program, for example, its options/configuration, input(s) and output(s), please consult the subsection titled ``Invoking ProgramName'', for example, see @ref{astnoisechisel}.
 For an explanation of the conventions we use in the example codes through the book, please see @ref{Conventions}.
 
 @menu
@@ -2152,7 +2152,7 @@ If you are searching for a specific phra
 Finally, you can return to the command line and quit Info by pressing the @key{q} key.
 
 You do not need to start from the top of the manual every time.
-For example, to get to @ref{Invoking astnoisechisel}, run the following command.
+For example, to get to @ref{astnoisechisel}, run the following command.
 In general, all programs have such an ``Invoking ProgramName'' section in this book.
 These sections are specifically for the description of inputs, outputs and configuration options of each program.
 You can access them directly for each program by giving its executable name to Info.
@@ -2261,7 +2261,7 @@ $ astscript-fits-view \
 After running this command, you will see that the DS9 window fully covers the height of your monitor, it is showing the whole image, using a more clear color-map, and many more useful things.
 In fact, you see the DS9 command that is used in your terminal@footnote{When comparing DS9's command-line options to Gnuastro's, you will notice how SAO DS9 does not follow the GNU style of options where ``long'' and ``short'' options are preceded by @option{--} and @option{-} respectively (for example, @option{--width} and @option{-w}, see @ref{Options}).}.
 On GNU/Linux operating systems (like Ubuntu, and Fedora), you can also set your graphics user interface to use this script for opening FITS files when you click on them.
-For more, see the instructions in the checklist at the start of @ref{Invoking astscript-fits-view}.
+For more, see the instructions in the checklist at the start of @ref{astscript-fits-view}.
 
 As you hover your mouse over the image, notice how the ``Value'' and positional fields on the top of the ds9 window get updated.
 The first thing you might notice is that when you hover the mouse over the regions with no data, they have a value of zero.
@@ -2904,7 +2904,7 @@ As you see in the matrix that is printed
 However, if you run Warp multiple times, the pixels will be mixed multiple times, creating a strong artificial blur/smoothing, or stronger correlated noise.
 
 Recall that the merging of multiple warps is done through matrix multiplication, therefore order matters in the separate operations.
-At a lower level, through Warp's @option{--matrix} option, you can directly request your desired final warp and do not have to break it up into different warps like above (see @ref{Invoking astwarp}).
+At a lower level, through Warp's @option{--matrix} option, you can directly request your desired final warp and do not have to break it up into different warps like above (see @ref{astwarp}).
 
 Fortunately these datasets are already aligned to the same pixel grid, so you do not actually need the files that were just generated.
 You can safely delete them all with the following command.
@@ -4125,7 +4125,7 @@ $ cat apertures.txt
 We can now feed this catalog into MakeProfiles using the command below to build the apertures over the image.
 The most important option for this particular job is @option{--mforflatpix}, it tells MakeProfiles that the values in the magnitude column should be used for each pixel of a flat profile.
 Without it, MakeProfiles would build the profiles such that the @emph{sum} of the pixels of each profile would have a @emph{magnitude} (in log-scale) of the value given in that column (what you would expect when simulating a galaxy for example).
-See @ref{Invoking astmkprof} for details on the options.
+See @ref{astmkprof} for details on the options.
 
 @example
 $ astmkprof apertures.txt --background=flat-ir/xdf-f160w.fits \
@@ -6607,7 +6607,7 @@ Let's use @file{astscript-psf-select-sta
 The advantage of using this script (instead of a simple @option{--range} in Table), is that it will also check distances to nearby stars and reject those that are too close (and not good for constructing the PSF).
 Since we have very bright stars in this very wide-field image, we will also increase the distance to nearby neighbors with brighter or similar magnitudes (the default value is 1 arcmin).
 To do this, we will set @option{--mindistdeg=0.02}, which corresponds to 1.2 arcmin.
-The details of the options for this script are discussed in @ref{Invoking astscript-psf-select-stars}.
+The details of the options for this script are discussed in @ref{astscript-psf-select-stars}.
 
 @example
 $ mkdir outer
@@ -6628,7 +6628,7 @@ $ astscript-ds9-region outer/67510-6-10.
 Now that the catalog of good stars is ready, it is time to construct the individual stamps from the catalog above.
 To create stamps, first, we need to crop a fixed-size box around each isolated star in the catalog.
 The contaminant objects in the crop should be masked and finally, the fluxes in these cropped images should be normalized.
-To do these, we will use @file{astscript-psf-stamp} (for more on this script see @ref{Invoking astscript-psf-stamp}).
+To do these, we will use @file{astscript-psf-stamp} (for more on this script see @ref{astscript-psf-stamp}).
 
 One of the most important parameters for this script is the normalization radii @code{--normradii}.
 This parameter defines a ring for the flux normalization of each star stamp.
@@ -6941,7 +6941,7 @@ $ echo $scale
 @end example
 
 Now that we know the scaling factor, we are ready to unite the outer and the inner part of the PSF.
-To do that, we will use the script @file{astscript-psf-unite} with the command below (for more on this script, see @ref{Invoking astscript-psf-unite}).
+To do that, we will use the script @file{astscript-psf-unite} with the command below (for more on this script, see @ref{astscript-psf-unite}).
 The basic parameters are the inner part of the PSF (given to @option{--inner}), the inner part's scale factor (@option{--scale}), and the junction radius (@option{--radius}).
 The inner part is first scaled, and all the pixels of the outer image within the given radius are replaced with the pixels of the inner image.
 Since the flux factor was computed for a ring of pixels between 10 and 15 pixels, let's set the junction radius to be 12 pixels (roughly in between 10 and 15):
@@ -8949,7 +8949,7 @@ $ aststatistics jplus-nc.fits -hSKY_STD
 @end example
 
 We are now ready to find the zero point!
-First, let's run the @command{astscript-zeropoint} with @option{--help} to see the option names (recall that you can see more details of each option in @ref{Invoking astscript-zeropoint}).
+First, let's run the @command{astscript-zeropoint} with @option{--help} to see the option names (recall that you can see more details of each option in @ref{astscript-zeropoint}).
 For the first time, let's use the script in the most simple state possible.
 We will keep only the essential options: the names of the input and reference images (and their HDUs), the name of the output, and also two apertures with radii of 3 arcsec to start with:
 
@@ -12233,7 +12233,7 @@ Afterwards, in @ref{Common options}, we
 @cindex Arguments to programs
 @cindex Command-line arguments
 When you type a command on the command-line, it is passed onto the shell (a generic name for the program that manages the command-line) as a string of characters.
-As an example, see the ``Invoking ProgramName'' sections in this manual for some examples of commands with each program, like @ref{Invoking asttable}, @ref{Invoking astfits}, or @ref{Invoking aststatistics}.
+As an example, see the ``Invoking ProgramName'' sections in this manual for some examples of commands with each program, like @ref{asttable}, @ref{astfits}, or @ref{aststatistics}.
 
 The shell then brakes up your string into separate @emph{tokens} or @emph{words} using any @emph{metacharacters} (like white-space, tab, @command{|}, @command{>} or @command{;}) that are in the string.
 On the command-line, the first thing you usually enter is the name of the program you want to run.
@@ -12345,7 +12345,7 @@ Command-line options allow configuring t
 A single option can be called in two ways: @emph{long} or @emph{short}.
 All options in Gnuastro accept the long format which has two hyphens an can have many characters (for example, @option{--hdu}).
 Short options only have one hyphen (@key{-}) followed by one character (for example, @option{-h}).
-You can see some examples in the list of options in @ref{Common options} or those for each program's ``Invoking ProgramName'' section.
+You can see some examples in the list of options in @ref{Common options} or those for each program's ``ProgramName'' section.
 Both formats are shown for those which support both.
 First the short is shown then the long.
 
@@ -12419,7 +12419,7 @@ If you are satisfied with the change, yo
 If the change was not satisfactory, you can remove the one you just added and not worry about forgetting the original value.
 Without this capability, you would have to memorize or save the original value somewhere else, run the command and then change the value again which is not at all convenient and is potentially cause lots of bugs.
 
-On the other hand, some options can be called multiple times in one run of a program and can thus take multiple values (for example, see the @option{--column} option in @ref{Invoking asttable}.
+On the other hand, some options can be called multiple times in one run of a program and can thus take multiple values (for example, see the @option{--column} option in @ref{asttable}.
 In these cases, the order of stored values is the same order that you specified on the command-line.
 
 @cindex Configuration files
@@ -12934,7 +12934,7 @@ As another example, if an option needs i
 Just note that the file name has to be already given on the command-line before reaching such options (that look into the contents of a file).
 
 But TAB completion is not limited to file types or contents.
-Arguments/Options that take certain fixed string values will directly suggest those strings with TAB, and completely ignore the file structure (for example, spectral line names in @ref{Invoking astcosmiccal})!
+Arguments/Options that take certain fixed string values will directly suggest those strings with TAB, and completely ignore the file structure (for example, spectral line names in @ref{astcosmiccal})!
 As another example, the option @option{--numthreads} option (to specify the number of threads to use by the program), will find the number of available threads on the system, and suggest the possible numbers with a TAB!
 
 To activate Gnuastro's custom TAB completion in Bash, you need to put the following line in one of your Bash startup files (for example, @file{~/.bashrc}).
@@ -13170,7 +13170,7 @@ All the values must either be stored in
 In case the necessary parameters are not given through any of these methods, the program will print a missing option error and abort.
 The only exception to this is @option{--numthreads}, whose default value is determined at run-time using the number of threads available to your system, see @ref{Multi-threaded operations}.
 Of course, you can still provide a default value for the number of threads at any of the levels below, but if you do not, the program will not abort.
-Also note that through automatic output name generation, the value to the @option{--output} option is also not mandatory on the command-line or in the configuration files for all programs which do not rely on that value as an input@footnote{One example of a program which uses the value given to @option{--output} as an input is ConvertType, this value specifies the type of the output through the value to @option{--output}, see @ref{Invoking astconvertt}.}, see @ref{Automatic output}.
+Also note that through automatic output name generation, the value to the @option{--output} option is also not mandatory on the command-line or in the configuration files for all programs which do not rely on that value as an input@footnote{One example of a program which uses the value given to @option{--output} as an input is ConvertType, this value specifies the type of the output through the value to @option{--output}, see @ref{astconvertt}.}, see @ref{Automatic output}.
 
 
 
@@ -13981,7 +13981,7 @@ Each column in the table contains the va
 For example, let's assume you have just ran MakeCatalog (see @ref{MakeCatalog}) on an image to measure some properties for the labeled regions (which might be detected galaxies for example) in the image.
 For each labeled region (detected galaxy), there will be a @emph{row} which groups its measured properties as @emph{columns}, one column for each property.
 One such property can be the object's magnitude, which is the sum of pixels with that label, or its center can be defined as the light-weighted average value of those pixels.
-Many such properties can be derived from the raw pixel values and their position, see @ref{Invoking astmkcatalog} for a long list.
+Many such properties can be derived from the raw pixel values and their position, see @ref{astmkcatalog} for a long list.
 
 As a summary, for each labeled region (or, galaxy) we have one @emph{row} and for each measured property we have one @emph{column}.
 This high-level structure is usually the first step for higher-level analysis, for example, finding the stellar mass or photometric redshift from magnitudes in multiple colors.
@@ -14607,10 +14607,10 @@ For example, you can copy or cut (copy a
 It also has features to delete, add, or edit meta-data keywords within one HDU.
 
 @menu
-* Invoking astfits::            Arguments and options to Header.
+* astfits::                     Arguments and options to Header.
 @end menu
 
-@node Invoking astfits,  , Fits, Fits
+@node astfits,  , Fits, Fits
 @subsection Invoking Fits
 
 Fits can print or manipulate the FITS file HDUs (extensions), meta-data keywords in a given HDU.
@@ -14706,7 +14706,7 @@ These three classes of options cannot be
 
 
 
-@node HDU information and manipulation, Keyword inspection and manipulation, Invoking astfits, Invoking astfits
+@node HDU information and manipulation, Keyword inspection and manipulation, astfits, astfits
 @subsubsection HDU information and manipulation
 Each FITS file header data unit, or HDU (also known as an extension) is an independent dataset (data + meta-data).
 Multiple HDUs can be stored in one FITS file, see @ref{Fits}.
@@ -14724,7 +14724,7 @@ Note that this option must be called alo
 It is thus useful in scripts, for example, when you need to do check the number of extensions in a FITS file.
 
 For a complete list of basic meta-data on the extensions in a FITS file, do not use any of the options in this section or in @ref{Keyword inspection and manipulation}.
-For more, see @ref{Invoking astfits}.
+For more, see @ref{astfits}.
 
 @item --hastablehdu
 Print @code{1} (on standard output) if at least one table HDU (ASCII or binary) exists in the FITS file.
@@ -14870,7 +14870,7 @@ If we had not used @option{--primaryimgh
 @end table
 
 
-@node Keyword inspection and manipulation, Pixel information images, HDU information and manipulation, Invoking astfits
+@node Keyword inspection and manipulation, Pixel information images, HDU information and manipulation, astfits
 @subsubsection Keyword inspection and manipulation
 The meta-data in each header data unit, or HDU (also known as extension, see @ref{Fits}) is stored as ``keyword''s.
 Each keyword consists of a name, value, unit, and comments.
@@ -14903,7 +14903,7 @@ $ astfits image-a.fits --keyvalue=NAXIS,
 @end example
 
 The output is internally stored (and finally printed) as a table (with one column per keyword).
-Therefore just like the Table program, you can use @option{--colinfoinstdout} to print the metadata like the example below (also see @ref{Invoking asttable}).
+Therefore just like the Table program, you can use @option{--colinfoinstdout} to print the metadata like the example below (also see @ref{asttable}).
 The keyword metadata (comments and units) are extracted from the comments and units of the keyword in the input files (first file that has a comment or unit).
 Hence if the keyword does not have units or comments in any of the input files, they will be empty.
 For more on Gnuastro's plain-text metadata format, see @ref{Gnuastro text table format}.
@@ -15355,7 +15355,7 @@ $ astfits in.fits --wcsdistortion=SIP --
 @end table
 
 
-@node Pixel information images,  , Keyword inspection and manipulation, Invoking astfits
+@node Pixel information images,  , Keyword inspection and manipulation, astfits
 @subsubsection Pixel information images
 In @ref{Keyword inspection and manipulation} options like @option{--pixelscale} were introduced for information on the pixels from the keywords.
 But that only provides a single value for all the pixels!
@@ -15456,7 +15456,7 @@ The conversion is not only one way (from
 So you can also convert a JPEG image or text file into a FITS image.
 Basically, other than EPS/PDF, you can use any of the recognized formats as different color channel inputs to get any of the recognized outputs.
 
-Before explaining the options and arguments (in @ref{Invoking astconvertt}), we will start with a short discussion on the difference between raster and vector graphics in @ref{Raster and Vector graphics}.
+Before explaining the options and arguments (in @ref{astconvertt}), we will start with a short discussion on the difference between raster and vector graphics in @ref{Raster and Vector graphics}.
 In ConvertType, vector graphics are used to add markers over your originally rasterized data, producing high quality images, ready to be used in your exciting papers.
 We will continue with a description of the recognized files types in @ref{Recognized file formats}, followed a short introduction to digital color in @ref{Color}.
 A tutorial on how to add markers over an image is then given in @ref{Marking objects for publication} and we conclude with a @LaTeX{} based solution to add coordinates over an image.
@@ -15466,7 +15466,7 @@ A tutorial on how to add markers over an
 * Recognized file formats::     Recognized file formats
 * Color::                       Some explanations on color.
 * Annotations for figure in paper::  Adding coordinates or physical scale.
-* Invoking astconvertt::        Options and arguments to ConvertType.
+* astconvertt::                 Options and arguments to ConvertType.
 @end menu
 
 @node Raster and Vector graphics, Recognized file formats, ConvertType, ConvertType
@@ -15612,7 +15612,7 @@ Most programs also support input as plai
 As input, each plain text file is considered to contain one color channel.
 
 In ConvertType, the recognized extensions for plain text files are @file{.txt} and @file{.dat}.
-As described in @ref{Invoking astconvertt}, if you just give these extensions, (and not a full filename) as output, then automatic output will be preformed to determine the final output name (see @ref{Automatic output}).
+As described in @ref{astconvertt}, if you just give these extensions, (and not a full filename) as output, then automatic output will be preformed to determine the final output name (see @ref{Automatic output}).
 Besides these, when the format of a file cannot be recognized from its name, ConvertType will fall back to plain text mode.
 So you can use any name (even without an extension) for a plain text input or output.
 Just note that when the suffix is not recognized, automatic output will not be preformed.
@@ -15700,8 +15700,8 @@ As a result, there is a lot of freedom i
 
 The mapping of single-channel values to multi-channel colors is called called a ``color map''.
 Since more information can be put in multiple channels, this usually results in better visualizing the dynamic range of your single-channel data.
-In ConvertType, you can use the @option{--colormap} option to choose between different mappings of mono-channel inputs, see @ref{Invoking astconvertt}.
-Below, we will review two of the basic color maps, please see the description of @option{--colormap} in @ref{Invoking astconvertt} for the full list.
+In ConvertType, you can use the @option{--colormap} option to choose between different mappings of mono-channel inputs, see @ref{astconvertt}.
+Below, we will review two of the basic color maps, please see the description of @option{--colormap} in @ref{astconvertt} for the full list.
 
 @itemize
 @item
@@ -15769,7 +15769,7 @@ $ astconvertt --listcolors
 @caption{Recognized color names in Gnuastro, shown with their numerical identifiers.}
 @end float
 
-@node Annotations for figure in paper, Invoking astconvertt, Color, ConvertType
+@node Annotations for figure in paper, astconvertt, Color, ConvertType
 @subsection Annotations for figure in paper
 
 @cindex Image annotation
@@ -16176,7 +16176,7 @@ pdflatex -shell-escape -halt-on-error re
 
 
 
-@node Invoking astconvertt,  , Annotations for figure in paper, ConvertType
+@node astconvertt,  , Annotations for figure in paper, ConvertType
 @subsection Invoking ConvertType
 
 ConvertType will convert any recognized input file type to any specified output type.
@@ -16228,7 +16228,7 @@ The common options are not repeated here
 * Drawing with vector graphics::  Adding marks in many shapes and colors over the pixels.
 @end menu
 
-@node ConvertType input and output, Pixel visualization, Invoking astconvertt, Invoking astconvertt
+@node ConvertType input and output, Pixel visualization, astconvertt, astconvertt
 @subsubsection ConvertType input and output
 
 @cindex Standard input
@@ -16334,7 +16334,7 @@ If it is in color mode, some degradation
 While the JPEG standard does support loss-less graphics, it is not commonly supported.
 @end table
 
-@node Pixel visualization, Drawing with vector graphics, ConvertType input and output, Invoking astconvertt
+@node Pixel visualization, Drawing with vector graphics, ConvertType input and output, astconvertt
 @subsubsection Pixel visualization
 
 The main goal of ConvertType is to visualize pixels to/from print or web friendly formats.
@@ -16466,7 +16466,7 @@ The result will be that a large are of t
 Note that this behavior is ideal for gray-scale images, if you want a color image, the colors are going to be mixed up.
 @end table
 
-@node Drawing with vector graphics,  , Pixel visualization, Invoking astconvertt
+@node Drawing with vector graphics,  , Pixel visualization, astconvertt
 @subsubsection Drawing with vector graphics
 
 With the options described in this section, you can draw marks over your to-be-published images (for example, in PDF).
@@ -16769,20 +16769,20 @@ Table has a large set of operations that
 For operations that Table does not do internally, FITS tables (ASCII or binary) are directly accessible to the users of Unix-like operating systems (in particular those working the command-line or shell, see @ref{Command-line interface}).
 With Table, a FITS table (in binary or ASCII formats) is only one command away from AWK (or any other tool you want to use).
 Just like a plain text file that you read with the @command{cat} command.
-You can pipe the output of Table into any other tool for higher-level processing, see the examples in @ref{Invoking asttable} for some simple examples.
+You can pipe the output of Table into any other tool for higher-level processing, see the examples in @ref{asttable} for some simple examples.
 
 In the sections below we describe how to effectively use the Table program.
 We start with @ref{Column arithmetic}, where the basic concept and methods of applying arithmetic operations on one or more columns are discussed.
 Afterwards, in @ref{Operation precedence in Table}, we review the various types of operations available and their precedence in an instance of calling Table.
 This is a good place to get a general feeling of all the things you can do with Table.
-Finally, in @ref{Invoking asttable}, we give some examples and describe each option in Table.
+Finally, in @ref{asttable}, we give some examples and describe each option in Table.
 
 @menu
 * Printing floating point numbers::  Optimal storage of floating point types.
 * Vector columns::              How to keep more than one value in each column.
 * Column arithmetic::           How to do operations on table columns.
 * Operation precedence in Table::  Order of running options in Table.
-* Invoking asttable::           Options and arguments to Table.
+* asttable::                    Options and arguments to Table.
 @end menu
 
 @node Printing floating point numbers, Vector columns, Table, Table
@@ -16842,7 +16842,7 @@ However, if you choose to store the outp
 @end cartouche
 
 To customize how columns containing floating point values are printed (in a plain-text output file, or in the standard output in your terminal), Table has four options for the two different types: @option{--txtf32format}, @option{--txtf32precision}, @option{--txtf64format} and @option{--txtf64precision}.
-They are fully described in @ref{Invoking asttable}.
+They are fully described in @ref{asttable}.
 
 @cartouche
 @noindent
@@ -16906,7 +16906,7 @@ With the command below, let's have a loo
 When you run it, you will have a different random number generator seed, so the numbers will be slightly different.
 For making reproducible random numbers, see @ref{Generating random numbers}.
 The @option{-Y} option is used for more easily readable numbers (without it, floating point numbers are written in scientific notation, for more see @ref{Printing floating point numbers}) and with the @option{-O} we are asking Table to also print the metadata.
-For more on Table's options, see @ref{Invoking asttable} and for seeing how the short options can be merged (such that @option{-Y -O} is identical to @option{-YO}), see @ref{Options}.
+For more on Table's options, see @ref{asttable} and for seeing how the short options can be merged (such that @option{-Y -O} is identical to @option{-YO}), see @ref{Options}.
 
 @example
 $ asttable table.fits -YO
@@ -17119,7 +17119,7 @@ Column arithmetic changes the values of
 So the old column metadata cannot be used any more.
 By default the output column of the arithmetic operation will be given a generic metadata (for example, its name will be @code{ARITH_1}, which is hardly useful!).
 But metadata are critically important and it is good practice to always have short, but descriptive, names for each columns, units and also some comments for more explanation.
-To add metadata to a column, you can use the @option{--colmetadata} option that is described in @ref{Invoking asttable} and @ref{Operation precedence in Table}.
+To add metadata to a column, you can use the @option{--colmetadata} option that is described in @ref{asttable} and @ref{Operation precedence in Table}.
 
 Since the arithmetic expressions are a value to @option{--column}, it does not necessarily have to be a separate option, so the commands above are also identical to the command below (note that this only has one @option{-c} option).
 Just be very careful with the quoting!
@@ -17371,13 +17371,13 @@ Such intervals can be useful in scenario
 
 @end table
 
-@node Operation precedence in Table, Invoking asttable, Column arithmetic, Table
+@node Operation precedence in Table, asttable, Column arithmetic, Table
 @subsection Operation precedence in Table
 
 The Table program can do many operations on the rows and columns of the input tables and they are not always applied in the order you call the operation on the command-line.
 In this section we will describe which operation is done before/after which operation.
 Knowing this precedence table is important to avoid confusion when you ask for more than one operation.
-For a description of each option, please see @ref{Invoking asttable}.
+For a description of each option, please see @ref{asttable}.
 By default, column-based operations will be done first.
 You can ask for switching to row-based operations to be done first, using the @option{--rowfirst} option.
 
@@ -17474,7 +17474,7 @@ For more on type conversion, see @ref{Nu
 
 @item Row selection by value in a column
 The following operations select rows based on the values in them.
-A more complete description of each of these options is given in @ref{Invoking asttable}.
+A more complete description of each of these options is given in @ref{asttable}.
 
 @itemize
 @item
@@ -17526,7 +17526,7 @@ These options limit/select rows based on
 @item Transpose vector columns (@option{--transpose})
 Transposing vector columns will not affect the number or metadata of columns, it will just re-arrange them in their 2D structure.
 As a result, after transposing, the number of rows changes, as well as the number of elements in each vector column.
-See the description of this option in @ref{Invoking asttable} for more (with an example).
+See the description of this option in @ref{asttable} for more (with an example).
 @end table
 
 @item Column metadata (@option{--colmetadata})
@@ -17586,7 +17586,7 @@ asttable table.fits -cRA,DEC --noblanken
          | asttable --sort=MULTIP --output=selected.fits
 @end example
 
-@node Invoking asttable,  , Operation precedence in Table, Table
+@node asttable,  , Operation precedence in Table, Table
 @subsection Invoking Table
 
 Table will read/write, select, modify, or show the information of the rows and columns in recognized Table formats (including FITS binary, FITS ASCII, and plain text table files, see @ref{Tables}).
@@ -17870,7 +17870,7 @@ For a working example of this scenario,
 @strong{How to avoid repetition when adding rows:} this option will simply add the rows of multiple tables into one, it does not check their contents!
 Therefore if you use this option on multiple catalogs that may have some shared physical objects in some of their rows, those rows/objects will be repeated in the final table.
 In such scenarios, to avoid potential repetition, it is better to use @ref{Match} (with @option{--notmatched} and @option{--outcols=AAA,BBB}) instead of Table.
-For more on using Match for this scenario, see the description of @option{--outcols} in @ref{Invoking astmatch}.
+For more on using Match for this scenario, see the description of @option{--outcols} in @ref{astmatch}.
 @end cartouche
 
 @item -X STR
@@ -17902,7 +17902,7 @@ The chosen column does not have to be in
 This is good when you just want to select using one column's values, but do not need that column anymore afterwards.
 
 For one example of using this option, see the example under
-@option{--sigclip-median} in @ref{Invoking aststatistics}.
+@option{--sigclip-median} in @ref{aststatistics}.
 
 @item --inpolygon=STR1,STR2
 Only return rows where the given coordinates are inside the polygon specified by the @option{--polygon} option.
@@ -18299,10 +18299,10 @@ We will try to add high-level interfaces
 
 @menu
 * Available databases::         List of available databases to Query.
-* Invoking astquery::           Inputs, outputs and configuration of Query.
+* astquery::                    Inputs, outputs and configuration of Query.
 @end menu
 
-@node Available databases, Invoking astquery, Query, Query
+@node Available databases, astquery, Query, Query
 @subsection Available databases
 
 The current list of databases supported by Query are listed at the end of this section.
@@ -18527,7 +18527,7 @@ For details on each dataset with necessa
 
 
 
-@node Invoking astquery,  , Available databases, Query
+@node astquery,  , Available databases, Query
 @subsection Invoking Query
 
 Query provides a high-level interface to downloading subsets of data from databases.
@@ -18630,7 +18630,7 @@ When @option{--dataset} is specified, th
 Some databases (like VizieR) contain tens of thousands of datasets, so you can limit the downloaded and printed information for available databases with the @option{--limitinfo} option (described below).
 Dataset descriptions are often large and contain a lot of text (unlike column descriptions).
 Therefore when printing the information of all datasets within a database, the information (e.g., database name) will be printed on separate lines before the description.
-However, when printing column information, the output has the same format as a similar option in Table (see @ref{Invoking asttable}).
+However, when printing column information, the output has the same format as a similar option in Table (see @ref{asttable}).
 
 Important note to consider: the printed order of the datasets or columns is just for displaying in the printed output.
 You cannot ask for datasets or columns based on the printed order, you need to use dataset or column names.
@@ -18800,14 +18800,14 @@ So when you simply crop the image of suc
 Therefore in its WCS mode, Crop will stitch parts of the tiles that are relevant for a target (with the given width) from all the input images that cover that region into the output.
 Of course, the tiles have to be present in the list of input files.
 
-Besides cropping postage stamps around certain coordinates, Crop can also crop arbitrary polygons from an image (or a set of tiles by stitching the relevant parts of different tiles within the polygon), see @option{--polygon} in @ref{Invoking astcrop}.
+Besides cropping postage stamps around certain coordinates, Crop can also crop arbitrary polygons from an image (or a set of tiles by stitching the relevant parts of different tiles within the polygon), see @option{--polygon} in @ref{astcrop}.
 Alternatively, it can crop out rectangular regions through the @option{--section} option from one image, see @ref{Crop section syntax}.
 
 @menu
 * Crop modes::                  Basic modes to define crop region.
 * Crop section syntax::         How to define a section to crop.
 * Blank pixels::                Pixels with no value.
-* Invoking astcrop::            Calling Crop on the command-line
+* astcrop::                     Calling Crop on the command-line
 @end menu
 
 @node Crop modes, Crop section syntax, Crop, Crop
@@ -18829,13 +18829,13 @@ Irrespective of how the crop region is d
 All coordinates are read as floating point numbers (not integers, except for the @option{--section} option, see below).
 By setting the @emph{mode} in Crop, you define the standard that the given coordinates must be interpreted.
 Here, the different ways to specify the crop region are discussed within each standard.
-For the full list options, please see @ref{Invoking astcrop}.
+For the full list options, please see @ref{astcrop}.
 
 When the crop is defined by its center, the respective (integer) central pixel position will be found internally according to the FITS standard.
 To have this pixel positioned in the center of the cropped region, the final cropped region will have an add number of pixels (even if you give an even number to @option{--width} in image mode).
 
 Furthermore, when the crop is defined as by its center, Crop allows you to only keep crops what do not have any blank pixels in the vicinity of their center (your primary target).
-This can be very convenient when your input catalog/coordinates originated from another survey/filter which is not fully covered by your input image, to learn more about this feature, please see the description of the @option{--checkcenter} option in @ref{Invoking astcrop}.
+This can be very convenient when your input catalog/coordinates originated from another survey/filter which is not fully covered by your input image, to learn more about this feature, please see the description of the @option{--checkcenter} option in @ref{astcrop}.
 
 @table @asis
 @item Image coordinates
@@ -18862,7 +18862,7 @@ The former is lower-level (does not acce
 Please see @ref{Crop section syntax} for a full description of this method.
 
 The latter option (@option{--polygon}) is a higher-level method to define any polygon (with any number of vertices) with floating point values.
-Please see the description of this option in @ref{Invoking astcrop} for its syntax.
+Please see the description of this option in @ref{astcrop} for its syntax.
 @end table
 
 @item WCS coordinates
@@ -18894,7 +18894,7 @@ If it exists in the input images, it wil
 
 @item Vertices of a single crop
 The @option{--polygon} option is a high-level method to define any convex polygon (with any number of vertices).
-Please see the description of this option in @ref{Invoking astcrop} for its syntax.
+Please see the description of this option in @ref{astcrop} for its syntax.
 @end table
 
 @cartouche
@@ -18948,7 +18948,7 @@ If you forget the quotes, anything after
 See @ref{Command-line} for a description of how the command-line works.
 
 
-@node Blank pixels, Invoking astcrop, Crop section syntax, Crop
+@node Blank pixels, astcrop, Crop section syntax, Crop
 @subsection Blank pixels
 
 @cindex Blank pixel
@@ -18973,7 +18973,7 @@ So by default, when dealing with float o
 This can be turned off with the @option{--zeroisnotblank} option.
 
 
-@node Invoking astcrop,  , Blank pixels, Crop
+@node astcrop,  , Blank pixels, Crop
 @subsection Invoking Crop
 
 Crop will crop a region from an image.
@@ -19052,7 +19052,7 @@ This has no effect on each output, see @
 * Crop known issues::           Known issues in running Crop.
 @end menu
 
-@node Crop options, Crop output, Invoking astcrop, Invoking astcrop
+@node Crop options, Crop output, astcrop, astcrop
 @subsubsection Crop options
 
 The options can be classified into the following contexts: Input, Output and operating mode options.
@@ -19263,7 +19263,7 @@ When this column is not given, the row n
 
 
 
-@node Crop output, Crop known issues, Crop options, Invoking astcrop
+@node Crop output, Crop known issues, Crop options, astcrop
 @subsubsection Crop output
 
 The string given to @option{--output} option will be interpreted depending on how many crops were requested, see @ref{Crop modes}:
@@ -19307,7 +19307,7 @@ The cropped image file name for that row
 The number of input images that were used to create that image.
 @item
 A @code{0} if the central few pixels (value to the @option{--checkcenter} option) are blank and @code{1} if they are not.
-When the crop was not defined by its center (see @ref{Crop modes}), or @option{--checkcenter} was given a value of 0 (see @ref{Invoking astcrop}), the center will not be checked and this column will be given a value of @code{-1}.
+When the crop was not defined by its center (see @ref{Crop modes}), or @option{--checkcenter} was given a value of 0 (see @ref{astcrop}), the center will not be checked and this column will be given a value of @code{-1}.
 @end enumerate
 
 If the output crop(s) have a single element (pixel in an image) and @option{--oneelemstdout} has been called, no output file will be produced!
@@ -19391,7 +19391,7 @@ You can disable this behavior with this
 @end table
 
 
-@node Crop known issues,  , Crop output, Invoking astcrop
+@node Crop known issues,  , Crop output, astcrop
 @subsubsection Crop known issues
 
 When running Crop, you may encounter strange errors and bugs.
@@ -19441,7 +19441,7 @@ For example, in the reduction of raw dat
 Later (once the images as warped into a single grid using Warp for example, see @ref{Warp}), the images are co-added (the output pixel grid is the average of the pixels of the individual input images).
 Arithmetic is Gnuastro's program for such operations on your datasets directly from the command-line.
 It currently uses the reverse polish or post-fix notation, see @ref{Reverse polish notation} and will work on the native data types of the input images/data to reduce CPU and RAM resources, see @ref{Numeric data types}.
-For more information on how to run Arithmetic, please see @ref{Invoking astarithmetic}.
+For more information on how to run Arithmetic, please see @ref{astarithmetic}.
 
 
 @menu
@@ -19449,7 +19449,7 @@ For more information on how to run Arith
 * Integer benefits and pitfalls::  Integers have benefits, but require care.
 * Noise basics::                Introduction various noise models.
 * Arithmetic operators::        List of operators known to Arithmetic.
-* Invoking astarithmetic::      How to run Arithmetic: options and output.
+* astarithmetic::               How to run Arithmetic: options and output.
 @end menu
 
 @node Reverse polish notation, Integer benefits and pitfalls, Arithmetic, Arithmetic
@@ -19527,7 +19527,7 @@ There are no more operands or operators,
 In the kitchen metaphor, you see that your recipe has no more steps, so you just pick up the remaining dish and take it to the dining room to enjoy a good dinner.
 @end enumerate
 
-In the Arithmetic program, the operands can be FITS images of any dimensionality, or numbers (see @ref{Invoking astarithmetic}).
+In the Arithmetic program, the operands can be FITS images of any dimensionality, or numbers (see @ref{astarithmetic}).
 In Table's column arithmetic, they can be any column in the table (a series of numbers in an array) or a single number (see @ref{Column arithmetic}).
 
 With this notation, very complicated procedures can be created without the need for parenthesis or worrying about precedence.
@@ -19849,7 +19849,7 @@ Gnuastro's programs will report the actu
 In the example above, did you notice how the random number generator seed above is different between GSL and MakeProfiles?
 However, if @option{--envseed} was given, both printed seeds would be the same.
 
-@node Arithmetic operators, Invoking astarithmetic, Noise basics, Arithmetic
+@node Arithmetic operators, astarithmetic, Noise basics, Arithmetic
 @subsection Arithmetic operators
 
 In this section, list of recognized operators in Arithmetic (and the Table program's @ref{Column arithmetic}) and discussed in detail with examples.
@@ -20988,7 +20988,7 @@ This operator only takes a single operan
 Therefore it does not change the layout of the array contents in memory and is very fast.
 
 If no further operation is requested on the 1D array, recall that Arithmetic will write a 1D array as a table column by default.
-In case you want the output to be saved as a 1D image, or to see it on the standard output, please use the @code{--onedasimage} or @code{--onedonstdout} options respectively (see @ref{Invoking astarithmetic}).
+In case you want the output to be saved as a 1D image, or to see it on the standard output, please use the @code{--onedasimage} or @code{--onedonstdout} options respectively (see @ref{astarithmetic}).
 
 This operator is useful in scenarios where after some operations on a 2D image or 3D cube, the dimensionality is no longer relevant for you and you just care about the values.
 In the example below, we will first make a simple 2D image from a plain-text file, then convert it to a 1D array:
@@ -22421,7 +22421,7 @@ The number of elements is read from the
 The second popped operand is only used for its number of elements, its numeric data type, or its values are fully ignored and it is later freed.
 
 @cindex Provenance
-Here is one useful scenario for this operator in tables: you want to merge the objects/rows of some catalogs together, but you first want to give each source catalog a label/counter that distinguishes between the source of each rows in the merged/final catalog (using @ref{Invoking asttable}).
+Here is one useful scenario for this operator in tables: you want to merge the objects/rows of some catalogs together, but you first want to give each source catalog a label/counter that distinguishes between the source of each rows in the merged/final catalog (using @ref{asttable}).
 The steps below show the the usage of this.
 
 @example
@@ -22555,7 +22555,7 @@ Similar to the @code{tofile} operator, w
 @end table
 
 
-@node Invoking astarithmetic,  , Arithmetic operators, Arithmetic
+@node astarithmetic,  , Arithmetic operators, Arithmetic
 @subsection Invoking Arithmetic
 
 Arithmetic will do pixel to pixel arithmetic operations on the individual pixels of input data and/or numbers.
@@ -22787,7 +22787,7 @@ $ echo "" | awk '@{print (10.32-3.84)^2.
 @cindex Average, weighted
 @cindex Kernel, convolution
 On an image, convolution can be thought of as a process to blur or remove the contrast in an image.
-If you are already familiar with the concept and just want to run Convolve, you can jump to @ref{Convolution kernel} and @ref{Invoking astconvolve} and skip the lengthy introduction on the basic definitions and concepts of convolution.
+If you are already familiar with the concept and just want to run Convolve, you can jump to @ref{Convolution kernel} and @ref{astconvolve} and skip the lengthy introduction on the basic definitions and concepts of convolution.
 
 There are generally two methods to convolve an image.
 The first and more intuitive one is in the ``spatial domain'' or using the actual image pixel values, see @ref{Spatial domain convolution}.
@@ -22818,7 +22818,7 @@ However this text is written for an unde
 * Frequency domain and Fourier operations::  Using frequencies in input.
 * Spatial vs. Frequency domain::  When to use which?
 * Convolution kernel::          How to specify the convolution kernel.
-* Invoking astconvolve::        Options and argument to Convolve.
+* astconvolve::                 Options and argument to Convolve.
 @end menu
 
 @node Spatial domain convolution, Frequency domain and Fourier operations, Convolve, Convolve
@@ -23562,7 +23562,7 @@ The reason is that if you apply a freque
 But when you have made the profiles in the image yourself, you can just make a larger input image and crop the central parts to completely remove the edge effect, see @ref{If convolving afterwards}.
 Also due to oversampling, both the kernels and the images can become very large and the speed boost of frequency domain convolution will significantly improve the processing time, see @ref{Oversampling}.
 
-@node Convolution kernel, Invoking astconvolve, Spatial vs. Frequency domain, Convolve
+@node Convolution kernel, astconvolve, Spatial vs. Frequency domain, Convolve
 @subsection Convolution kernel
 
 All the programs that need convolution will need to be given a convolution kernel file and extension.
@@ -23580,7 +23580,7 @@ By default MakeProfiles will make the Ga
 ConvertType: You can write your own desired kernel into a text file table and convert it to a FITS file with ConvertType, see @ref{ConvertType}.
 Just be careful that the kernel has to have an odd number of pixels along its two axes, see @ref{Convolution process}.
 All the programs that do convolution will normalize the kernel internally, so if you choose this option, you do not have to worry about normalizing the kernel.
-Only within Convolve, there is an option to disable normalization, see @ref{Invoking astconvolve}.
+Only within Convolve, there is an option to disable normalization, see @ref{astconvolve}.
 
 @end itemize
 
@@ -23620,7 +23620,7 @@ By default, the system configuration fil
 @end table
 
 
-@node Invoking astconvolve,  , Convolution kernel, Convolve
+@node astconvolve,  , Convolution kernel, Convolve
 @subsection Invoking Convolve
 
 Convolve an input dataset (2D image or 1D spectrum for example) with a known kernel, or make the kernel necessary to match two PSFs.
@@ -23854,7 +23854,7 @@ It is therefore necessary to warp the im
 * Linear warping basics::       Basics of coordinate transformation.
 * Merging multiple warpings::   How to merge multiple matrices.
 * Resampling::                  Warping an image is re-sampling it.
-* Invoking astwarp::            Arguments and options for Warp.
+* astwarp::                     Arguments and options for Warp.
 @end menu
 
 @node Linear warping basics, Merging multiple warpings, Warp, Warp
@@ -23997,7 +23997,7 @@ These three operations can be merged in
 
 
 
-@node Resampling, Invoking astwarp, Merging multiple warpings, Warp
+@node Resampling, astwarp, Merging multiple warpings, Warp
 @subsection Resampling
 
 @cindex Pixel
@@ -24078,7 +24078,7 @@ For more, see the description of this op
 
 
 
-@node Invoking astwarp,  , Resampling, Warp
+@node astwarp,  , Resampling, Warp
 @subsection Invoking Warp
 
 Warp will warp an input image into a new pixel grid by pixel mixing (see @ref{Resampling}).
@@ -24151,10 +24151,10 @@ The following options are shared between
 
 @table @option
 @item --hstartwcs=INT
-Specify the first header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{Invoking astcrop}.
+Specify the first header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{astcrop}.
 
 @item --hendwcs=INT
-Specify the last header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{Invoking astcrop}.
+Specify the last header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{astcrop}.
 
 @item -C FLT
 @itemx --coveredfrac=FLT
@@ -24170,7 +24170,7 @@ As a result, with @option{--coveredfrac=
 * Linear warps to be called explicitly::  Other warps.
 @end menu
 
-@node Align pixels with WCS considering distortions, Linear warps to be called explicitly, Invoking astwarp, Invoking astwarp
+@node Align pixels with WCS considering distortions, Linear warps to be called explicitly, astwarp, astwarp
 @subsubsection Align pixels with WCS considering distortions
 
 @cindex Resampling
@@ -24454,7 +24454,7 @@ On the other hand, 0 means that the pixe
 
 
 
-@node Linear warps to be called explicitly,  , Align pixels with WCS considering distortions, Invoking astwarp
+@node Linear warps to be called explicitly,  , Align pixels with WCS considering distortions, astwarp
 @subsubsection Linear warps to be called explicitly
 
 Linear warps include operations like rotation, scaling, sheer, etc.
@@ -24618,7 +24618,7 @@ The Statistics program is designed for s
 * Sigma clipping::              Definition of @mymath{\sigma}-clipping.
 * Least squares fitting::       Fitting with various parametric functions.
 * Sky value::                   Definition and derivation of the Sky value.
-* Invoking aststatistics::      Arguments and options to Statistics.
+* aststatistics::               Arguments and options to Statistics.
 @end menu
 
 
@@ -24632,7 +24632,7 @@ So on the horizontal axis we have the bi
 You can use it to get a general view of the distribution: which values have been repeated the most? how close/far are the most significant bins?  Are there more values in the larger part of the range of the dataset, or in the lower part?  Similarly, many very important properties about the dataset can be deduced from a visual inspection of the histogram.
 In the Statistics program, the histogram can be either output to a table to plot with your favorite plotting program@footnote{
 We recommend @url{http://pgfplots.sourceforge.net/,PGFPlots} which generates your plots directly within @TeX{} (the same tool that generates your document).},
-or it can be shown with ASCII characters on the command-line, which is very crude, but good enough for a fast and on-the-go analysis, see the example in @ref{Invoking aststatistics}.
+or it can be shown with ASCII characters on the command-line, which is very crude, but good enough for a fast and on-the-go analysis, see the example in @ref{aststatistics}.
 
 @cindex Intervals, histogram
 @cindex Bin width, histogram
@@ -24653,7 +24653,7 @@ Normalizing a cumulative frequency plot
 Unlike the histogram which has a limited number of bins, ideally the cumulative frequency plot should have one point for every data element.
 Even in small datasets (for example, a @mymath{200\times200} image) this will result in an unreasonably large number of points to plot (40000)! As a result, for practical reasons, it is common to only store its value on a certain number of points (intervals) in the input range rather than the whole dataset, so you should determine the number of bins you want when asking for a cumulative frequency plot.
 In Gnuastro (and thus the Statistics program), the number reported for each bin is the total number of data points until the larger interval value for that bin.
-You can see an example histogram and cumulative frequency plot of a single dataset under the @option{--asciihist} and @option{--asciicfp} options of @ref{Invoking aststatistics}.
+You can see an example histogram and cumulative frequency plot of a single dataset under the @option{--asciihist} and @option{--asciicfp} options of @ref{aststatistics}.
 
 So as a summary, both the histogram and cumulative frequency plot in Statistics will work with bins.
 Within each bin/interval, the lower value is considered to be within then bin (it is inclusive), but its larger value is not (it is exclusive).
@@ -25255,7 +25255,7 @@ You may have noticed that unlike the cas
 This is becasue @option{--quiet} and @option{--fitestimate} were called together.
 In this case, because all the fitting parameters are written as FITS keywords, because of the @option{--quiet} option, they are no longer printed on standard output.
 
-@node Sky value, Invoking aststatistics, Least squares fitting, Statistics
+@node Sky value, aststatistics, Least squares fitting, Statistics
 @subsection Sky value
 
 @cindex Sky
@@ -25504,7 +25504,7 @@ The same goes for the @option{--checksky
 
 
 
-@node Invoking aststatistics,  , Sky value, Statistics
+@node aststatistics,  , Sky value, Statistics
 @subsection Invoking Statistics
 
 Statistics will print statistical measures of an input dataset (table column or image).
@@ -25624,7 +25624,7 @@ If you want another statistical paramete
 * Statistics on tiles::         Possible to do single-valued measurements on tiles.
 @end menu
 
-@node Input to Statistics, Single value measurements, Invoking aststatistics, Invoking aststatistics
+@node Input to Statistics, Single value measurements, aststatistics, aststatistics
 @subsubsection Input to Statistics
 
 The following set of options are for specifying the input/outputs of Statistics.
@@ -25665,7 +25665,7 @@ The quantile of each horizontal axis val
 
 @end table
 
-@node Single value measurements, Generating histograms and cumulative frequency plots, Input to Statistics, Invoking aststatistics
+@node Single value measurements, Generating histograms and cumulative frequency plots, Input to Statistics, aststatistics
 @subsubsection Single value measurements
 
 @table @option
@@ -25822,7 +25822,7 @@ Standard deviation after applying @mymat
 
 @end table
 
-@node Generating histograms and cumulative frequency plots, Fitting options, Single value measurements, Invoking aststatistics
+@node Generating histograms and cumulative frequency plots, Fitting options, Single value measurements, aststatistics
 @subsubsection Generating histograms and cumulative freq.
 
 The list of options below are for those statistical operations that output more than one value.
@@ -25990,7 +25990,7 @@ Similar to @option{--onebinstart}, but f
 
 @end table
 
-@node Fitting options, Contour options, Generating histograms and cumulative frequency plots, Invoking aststatistics
+@node Fitting options, Contour options, Generating histograms and cumulative frequency plots, aststatistics
 @subsubsection Fitting options
 
 With the options below, you can customize the least squares fitting features of Statistics.
@@ -26163,7 +26163,7 @@ See @ref{Selecting table columns}.
 
 
 
-@node Contour options, Statistics on tiles, Fitting options, Invoking aststatistics
+@node Contour options, Statistics on tiles, Fitting options, aststatistics
 @subsubsection Contour options
 
 Contours are useful to highlight the 2D shape of a certain flux level over an image.
@@ -26185,7 +26185,7 @@ If the image has World Coordinate System
 Note that currently, this is a very crude/simple implementation, please let us know if you find problematic situations so we can fix it.
 @end table
 
-@node Statistics on tiles,  , Contour options, Invoking aststatistics
+@node Statistics on tiles,  , Contour options, aststatistics
 @subsubsection Statistics on tiles
 
 All the options described until now were from the first class of operations discussed above: those that treat the whole dataset as one.
@@ -26344,7 +26344,7 @@ You can then directly feed NoiseChisel's
 Thanks to the published papers mentioned above, there is no need to provide a more complete introduction to NoiseChisel in this book.
 However, published papers cannot be updated any more, but the software has evolved/changed.
 The changes since publication are documented in @ref{NoiseChisel changes after publication}.
-In @ref{Invoking astnoisechisel}, the details of running NoiseChisel and its options are discussed.
+In @ref{astnoisechisel}, the details of running NoiseChisel and its options are discussed.
 
 As discussed above, detection is one of the most important steps for your scientific result.
 It is therefore very important to obtain a good understanding of NoiseChisel (and afterwards @ref{Segment} and @ref{MakeCatalog}).
@@ -26356,17 +26356,17 @@ In the meantime, they also show the modu
 Defining colors is a very common process in most science-cases.
 Therefore it is also recommended to (patiently) complete that tutorial for optimal usage of NoiseChisel in conjunction with all the other Gnuastro programs.
 @ref{Detecting large extended targets} shows you can optimize NoiseChisel's settings for very extended objects to successfully carve out to signal-to-noise ratio levels of below 1/10.
-After going through those tutorials, play a little with the settings (in the order presented in the paper and @ref{Invoking astnoisechisel}) on a dataset you are familiar with and inspect all the check images (options starting with @option{--check}) to see the effect of each parameter.
+After going through those tutorials, play a little with the settings (in the order presented in the paper and @ref{astnoisechisel}) on a dataset you are familiar with and inspect all the check images (options starting with @option{--check}) to see the effect of each parameter.
 
-Below, in @ref{Invoking astnoisechisel}, we will review NoiseChisel's input, detection, and output options in @ref{NoiseChisel input}, @ref{Detection options}, and @ref{NoiseChisel output}.
+Below, in @ref{astnoisechisel}, we will review NoiseChisel's input, detection, and output options in @ref{NoiseChisel input}, @ref{Detection options}, and @ref{NoiseChisel output}.
 If you have used NoiseChisel within your research, please run it with @option{--cite} to list the papers you should cite and how to acknowledge its funding sources.
 
 @menu
 * NoiseChisel changes after publication::  Updates since published papers.
-* Invoking astnoisechisel::     Options and arguments for NoiseChisel.
+* astnoisechisel::              Options and arguments for NoiseChisel.
 @end menu
 
-@node NoiseChisel changes after publication, Invoking astnoisechisel, NoiseChisel, NoiseChisel
+@node NoiseChisel changes after publication, astnoisechisel, NoiseChisel, NoiseChisel
 @subsection NoiseChisel changes after publication
 
 NoiseChisel was initially introduced in @url{https://arxiv.org/abs/1505.01664, Akhlaghi and Ichikawa [2015]} and updates after the first four years were published in @url{https://arxiv.org/abs/1909.11230, Akhlaghi [2019]}.
@@ -26395,7 +26395,7 @@ In our tests, this gave a much improved
 
 
 
-@node Invoking astnoisechisel,  , NoiseChisel changes after publication, NoiseChisel
+@node astnoisechisel,  , NoiseChisel changes after publication, NoiseChisel
 @subsection Invoking NoiseChisel
 
 NoiseChisel will detect signal in noise producing a multi-extension dataset containing a binary detection map which is the same size as the input.
@@ -26528,7 +26528,7 @@ Finally, in @ref{NoiseChisel output} the
 * NoiseChisel output::          NoiseChisel's output options and format.
 @end menu
 
-@node NoiseChisel input, Detection options, Invoking astnoisechisel, Invoking astnoisechisel
+@node NoiseChisel input, Detection options, astnoisechisel, astnoisechisel
 @subsubsection NoiseChisel input
 
 The options here can be used to configure the inputs and output of NoiseChisel, along with some general processing options.
@@ -26632,7 +26632,7 @@ Except for the tile size, all the other
 The format is identical to that of the @option{--tilesize} option that is discussed in that section.
 @end table
 
-@node Detection options, NoiseChisel output, NoiseChisel input, Invoking astnoisechisel
+@node Detection options, NoiseChisel output, NoiseChisel input, astnoisechisel
 @subsubsection Detection options
 
 Detection is the process of separating the pixels in the image into two groups: 1) Signal, and 2) Noise.
@@ -26986,7 +26986,7 @@ By default the output will have the same
 
 
 
-@node NoiseChisel output,  , Detection options, Invoking astnoisechisel
+@node NoiseChisel output,  , Detection options, astnoisechisel
 @subsubsection NoiseChisel output
 
 NoiseChisel's output is a multi-extension FITS file.
@@ -27157,14 +27157,14 @@ Those papers cannot be updated any more
 For example, Segment became a separate program (from NoiseChisel) in 2018 (after those papers were published).
 Therefore this book is the definitive reference.
 @c To help in the transition from those papers to the software you are using, see @ref{Segment changes after publication}.
-Finally, in @ref{Invoking astsegment}, we will discuss Segment's inputs, outputs and configuration options.
+Finally, in @ref{astsegment}, we will discuss Segment's inputs, outputs and configuration options.
 
 
 @menu
-* Invoking astsegment::         Inputs, outputs and options to Segment
+* astsegment::                  Inputs, outputs and options to Segment
 @end menu
 
-@c @node Segment changes after publication, Invoking astsegment, Segment, Segment
+@c @node Segment changes after publication, astsegment, Segment, Segment
 @c @subsection Segment changes after publication
 
 @c Segment's main algorithm and working strategy were initially defined and introduced in Section 3.2 of @url{https://arxiv.org/abs/1505.01664, Akhlaghi and Ichikawa [2015]} and @url{https://arxiv.org/abs/1909.11230, Akhlaghi [2019]}.
@@ -27176,7 +27176,7 @@ Finally, in @ref{Invoking astsegment}, w
 @c The aim of this section is to make the transition from the paper to your installed version, as smooth as possible through the list below.
 @c For a more detailed list of changes in previous Gnuastro releases/versions, please follow the @file{NEWS} file@footnote{The @file{NEWS} file is present in the released Gnuastro tarball, see @ref{Release tarball}.}.
 
-@node Invoking astsegment,  , Segment, Segment
+@node astsegment,  , Segment, Segment
 @subsection Invoking Segment
 
 Segment will identify substructure within the detected regions of an input image.
@@ -27229,7 +27229,7 @@ Finally, in @ref{Segment output}, we wil
 * Segment output::              Outputs of Segment
 @end menu
 
-@node Segment input, Segmentation options, Invoking astsegment, Invoking astsegment
+@node Segment input, Segmentation options, astsegment, astsegment
 @subsubsection Segment input
 
 Besides the input dataset (for example, astronomical image), Segment also needs to know the Sky standard deviation and the regions of the dataset that it should segment.
@@ -27371,7 +27371,7 @@ It is important for them to be much larg
 @end table
 
 
-@node Segmentation options, Segment output, Segment input, Invoking astsegment
+@node Segmentation options, Segment output, Segment input, astsegment
 @subsubsection Segmentation options
 
 The options below can be used to configure every step of the segmentation process in the Segment program.
@@ -27485,7 +27485,7 @@ This behavior can be disabled with @opti
 
 @end table
 
-@node Segment output,  , Segmentation options, Invoking astsegment
+@node Segment output,  , Segmentation options, astsegment
 @subsubsection Segment output
 
 The main output of Segment are two label datasets (with integer types, separating the dataset's elements into different classes).
@@ -27629,7 +27629,7 @@ Similarly, the sum of all these pixels w
 Pixels with labels equal to, or smaller than, zero will be ignored by MakeCatalog.
 In other words, the number of rows in MakeCatalog's output is already known before running it (the maximum value of the labeled dataset).
 
-Before getting into the details of running MakeCatalog (in @ref{Invoking astmkcatalog}, we will start with a discussion on the basics of its approach to separating detection from measurements in @ref{Detection and catalog production}.
+Before getting into the details of running MakeCatalog (in @ref{astmkcatalog}, we will start with a discussion on the basics of its approach to separating detection from measurements in @ref{Detection and catalog production}.
 A very important factor in any measurement is understanding its validity range, or limits.
 Therefore in @ref{Quantifying measurement limits}, we will discuss how to estimate the reliability of the detection and basic measurements.
 This section will continue with a derivation of elliptical parameters from the labeled datasets in @ref{Measuring elliptical parameters}.
@@ -27642,7 +27642,7 @@ For those who feel MakeCatalog's existin
 * Measuring elliptical parameters::  Estimating elliptical parameters.
 * Adding new columns to MakeCatalog::  How to add new columns.
 * MakeCatalog measurements::    List of all the measurements/columns by MakeCatalog.
-* Invoking astmkcatalog::       Options and arguments to MakeCatalog.
+* astmkcatalog::                Options and arguments to MakeCatalog.
 @end menu
 
 @node Detection and catalog production, Brightness flux magnitude, MakeCatalog, MakeCatalog
@@ -28422,7 +28422,7 @@ These two passes are designed to be raw
 This will allow parallel processing and simplicity/clarity.
 So if your new calculation, needs new raw information from the pixels, then you will need to also modify the respective @code{mkcatalog_first_pass} and @code{mkcatalog_second_pass} functions (both in @file{bin/mkcatalog/mkcatalog.c}) and define new raw table columns in @file{main.h} (hopefully the comments in the code are clear enough).
 
-In all these different places, the final columns are sorted in the same order (same order as @ref{Invoking astmkcatalog}).
+In all these different places, the final columns are sorted in the same order (same order as @ref{astmkcatalog}).
 This allows a particular column/option to be easily found in all steps.
 Therefore in adding your new option, be sure to keep it in the same relative place in the list in all the separate places (it does not necessarily have to be in the end), and near conceptually similar options.
 
@@ -28473,7 +28473,7 @@ Update this manual and add a description
 
 
 
-@node MakeCatalog measurements, Invoking astmkcatalog, Adding new columns to MakeCatalog, MakeCatalog
+@node MakeCatalog measurements, astmkcatalog, Adding new columns to MakeCatalog, MakeCatalog
 @subsection MakeCatalog measurements
 
 MakeCatalog's output measurements/columns can be specified using command-line options (@ref{Options}).
@@ -28897,7 +28897,7 @@ To know when this measurement is reasona
 
 @item --sigclip-mean-sb
 Surface brightness (over 1 pixel's area in arcsec@mymath{^2}) of the sigma-clipped mean value of the pixel values distribution associated to each label (object or clump).
-This is useful in scenarios where your labels have approximately @emph{constant} surface brightness values @emph{after} after removing outliers: for example in a radial profile, see @ref{Invoking astscript-radial-profile}).
+This is useful in scenarios where your labels have approximately @emph{constant} surface brightness values @emph{after} after removing outliers: for example in a radial profile, see @ref{astscript-radial-profile}).
 
 In other scenarios it should be used with extreme care.
 For example over the full area of a galaxy/star the pixel distribution is not constant (or symmetric after adding noise), their pixel distributions are inherently skewed (with fewer pixels in the center, having a very large value and many pixels in the outer parts having lower values).
@@ -29178,7 +29178,7 @@ These measurements contain @code{-other-
 
 
 
-@node Invoking astmkcatalog,  , MakeCatalog measurements, MakeCatalog
+@node astmkcatalog,  , MakeCatalog measurements, MakeCatalog
 @subsection Invoking MakeCatalog
 
 MakeCatalog will do measurements and produce a catalog from a labeled dataset and optional values dataset(s).
@@ -29231,7 +29231,7 @@ Finally, in @ref{MakeCatalog output} the
 * MakeCatalog output::          File names of MakeCatalog's output table.
 @end menu
 
-@node MakeCatalog inputs and basic settings, Upper-limit settings, Invoking astmkcatalog, Invoking astmkcatalog
+@node MakeCatalog inputs and basic settings, Upper-limit settings, astmkcatalog, astmkcatalog
 @subsubsection MakeCatalog inputs and basic settings
 
 MakeCatalog works by using a localized/labeled dataset (see @ref{MakeCatalog}).
@@ -29275,7 +29275,7 @@ In such cases, you can use Gnuastro's Ar
 @end example
 
 To summarize: if the input file to MakeCatalog is the default/full output of Segment (see @ref{Segment output}) you do not have to worry about any of the @option{--*file} options below.
-You can just give Segment's output file to MakeCatalog as described in @ref{Invoking astmkcatalog}.
+You can just give Segment's output file to MakeCatalog as described in @ref{astmkcatalog}.
 To feed NoiseChisel's output into MakeCatalog, just change the labeled dataset's header (with @option{--hdu=DETECTIONS}).
 The full list of input dataset options and general setting options are described below.
 
@@ -29381,7 +29381,7 @@ If you use this option, it will have 13
 
 
 
-@node Upper-limit settings, MakeCatalog output, MakeCatalog inputs and basic settings, Invoking astmkcatalog
+@node Upper-limit settings, MakeCatalog output, MakeCatalog inputs and basic settings, astmkcatalog
 @subsubsection Upper-limit settings
 
 The upper-limit magnitude was discussed in @ref{Quantifying measurement limits}.
@@ -29476,7 +29476,7 @@ For more on these positional columns, se
 @end table
 
 
-@node MakeCatalog output,  , Upper-limit settings, Invoking astmkcatalog
+@node MakeCatalog output,  , Upper-limit settings, astmkcatalog
 @subsubsection MakeCatalog output
 After it has completed all the requested measurements (see @ref{MakeCatalog measurements}), MakeCatalog will store its measurements in table(s).
 If an output filename is given (see @option{--output} in @ref{Input output options}), the format of the table will be deduced from the name.
@@ -29601,10 +29601,10 @@ The aperture can be a circle or an ellip
 
 @menu
 * Matching algorithms::         Different ways to find the match
-* Invoking astmatch::           Inputs, outputs and options of Match
+* astmatch::                    Inputs, outputs and options of Match
 @end menu
 
-@node Matching algorithms, Invoking astmatch, Match, Match
+@node Matching algorithms, astmatch, Match, Match
 @subsection Matching algorithms
 
 Matching involves two catalogs, let's call them catalog A (with N rows) and catalog B (with M rows).
@@ -29717,7 +29717,7 @@ If you always need to match against one
 Therefore you can save its k-d tree into a file and simply give it to later calls, like the example given in the description of the k-d algorithm mentioned above.
 @end itemize
 
-@node Invoking astmatch,  , Matching algorithms, Match
+@node astmatch,  , Matching algorithms, Match
 @subsection Invoking Match
 
 When given two catalogs, Match finds the rows that are nearest to each other within an input aperture.
@@ -30102,7 +30102,7 @@ After all the transformations are applie
 * Modeling basics::             Astronomical modeling basics.
 * If convolving afterwards::    Considerations for convolving later.
 * Profile magnitude::           Definition of total profile magnitude.
-* Invoking astmkprof::          Inputs and Options for MakeProfiles.
+* astmkprof::                   Inputs and Options for MakeProfiles.
 @end menu
 
 
@@ -30432,7 +30432,7 @@ You also have to shift all the pixel pos
 
 After convolution, you can crop the outer @mymath{n} pixels with the section crop box specification of Crop: @option{--section=n+1:*-n,n+1:*-n} (according to the FITS standard, counting is from 1 so we use @code{n+1}) assuming your PSF is a square, see @ref{Crop section syntax}.
 This will also remove all discrete Fourier transform artifacts (blurred sides) from the final image.
-To facilitate this shift, MakeProfiles has the options @option{--xshift}, @option{--yshift} and @option{--prepforconv}, see @ref{Invoking astmkprof}.
+To facilitate this shift, MakeProfiles has the options @option{--xshift}, @option{--yshift} and @option{--prepforconv}, see @ref{astmkprof}.
 
 
 
@@ -30443,7 +30443,7 @@ To facilitate this shift, MakeProfiles h
 
 
 
-@node Profile magnitude, Invoking astmkprof, If convolving afterwards, MakeProfiles
+@node Profile magnitude, astmkprof, If convolving afterwards, MakeProfiles
 @subsection Profile magnitude
 
 @cindex Truncation radius
@@ -30468,7 +30468,7 @@ If not, only the overlapping pixels of t
 
 
 
-@node Invoking astmkprof,  , Profile magnitude, MakeProfiles
+@node astmkprof,  , Profile magnitude, MakeProfiles
 @subsection Invoking MakeProfiles
 
 MakeProfiles will make any number of profiles specified in a catalog either individually or in one image.
@@ -30553,7 +30553,7 @@ Please see @ref{Sufi simulates a detecti
 * MakeProfiles log file::       A description of the optional log file.
 @end menu
 
-@node MakeProfiles catalog, MakeProfiles profile settings, Invoking astmkprof, Invoking astmkprof
+@node MakeProfiles catalog, MakeProfiles profile settings, astmkprof, astmkprof
 @subsubsection MakeProfiles catalog
 The catalog containing information about each profile can be in the FITS ASCII, FITS binary, or plain text formats (see @ref{Tables}).
 The latter can also be provided using standard input (see @ref{Standard input}).
@@ -30693,7 +30693,7 @@ If @option{--tunitinp} is given, this va
 
 @end table
 
-@node MakeProfiles profile settings, MakeProfiles output dataset, MakeProfiles catalog, Invoking astmkprof
+@node MakeProfiles profile settings, MakeProfiles output dataset, MakeProfiles catalog, astmkprof
 @subsubsection MakeProfiles profile settings
 
 The profile parameters that differ between each created profile are specified through the columns in the input catalog and described in @ref{MakeProfiles catalog}.
@@ -30929,7 +30929,7 @@ Because the maximum operator is independ
 
 @end table
 
-@node MakeProfiles output dataset, MakeProfiles log file, MakeProfiles profile settings, Invoking astmkprof
+@node MakeProfiles output dataset, MakeProfiles log file, MakeProfiles profile settings, astmkprof
 @subsubsection MakeProfiles output dataset
 MakeProfiles takes an input catalog uses basic properties that are defined there to build a dataset, for example, a 2D image containing the profiles in the catalog.
 In @ref{MakeProfiles catalog} and @ref{MakeProfiles profile settings}, the catalog and profile settings were discussed.
@@ -31107,7 +31107,7 @@ MakeProfiles will not complain if you us
 
 @end table
 
-@node MakeProfiles log file,  , MakeProfiles output dataset, Invoking astmkprof
+@node MakeProfiles log file,  , MakeProfiles output dataset, astmkprof
 @subsubsection MakeProfiles log file
 
 Besides the final merged dataset of all the profiles, or the individual datasets (see @ref{MakeProfiles output dataset}), if the @option{--log} option is called MakeProfiles will also create a log file in the current directory (where you run MockProfiles).
@@ -31172,7 +31172,7 @@ Even higher-level analysis is still need
 
 To derive higher-level information regarding our sources in extra-galactic astronomy, cosmological calculations are necessary.
 In Gnuastro, CosmicCalculator is in charge of such calculations.
-Before discussing how CosmicCalculator is called and operates (in @ref{Invoking astcosmiccal}), it is important to provide a rough but mostly self sufficient review of the basics and the equations used in the analysis.
+Before discussing how CosmicCalculator is called and operates (in @ref{astcosmiccal}), it is important to provide a rough but mostly self sufficient review of the basics and the equations used in the analysis.
 In @ref{Distance on a 2D curved space} the basic idea of understanding distances in a curved and expanding 2D universe (which we can visualize) are reviewed.
 Having solidified the concepts there, in @ref{Extending distance concepts to 3D}, the formalism is extended to the 3D universe we are trying to study in our research.
 
@@ -31182,7 +31182,7 @@ There are many books thoroughly deriving
 @menu
 * Distance on a 2D curved space::  Distances in 2D for simplicity.
 * Extending distance concepts to 3D::  Going to 3D (our real universe).
-* Invoking astcosmiccal::       How to run CosmicCalculator.
+* astcosmiccal::                How to run CosmicCalculator.
 @end menu
 
 @node Distance on a 2D curved space, Extending distance concepts to 3D, CosmicCalculator, CosmicCalculator
@@ -31329,7 +31329,7 @@ We can thus parameterize the change in d
 @dispmath{ds^2=c^2dt^2-a^2(t)ds_s^2 = c^2dt^2-a^2(t)(d\chi^2+r^2d\phi^2).}
 
 
-@node Extending distance concepts to 3D, Invoking astcosmiccal, Distance on a 2D curved space, CosmicCalculator
+@node Extending distance concepts to 3D, astcosmiccal, Distance on a 2D curved space, CosmicCalculator
 @subsection Extending distance concepts to 3D
 
 The concepts of @ref{Distance on a 2D curved space} are here extended to a 3D space that @emph{might} be curved.
@@ -31378,7 +31378,7 @@ In a non-static universe (with a scale f
 
 
 
-@node Invoking astcosmiccal,  , Extending distance concepts to 3D, CosmicCalculator
+@node astcosmiccal,  , Extending distance concepts to 3D, CosmicCalculator
 @subsection Invoking CosmicCalculator
 
 CosmicCalculator will calculate cosmological variables based on the input parameters.
@@ -31436,7 +31436,7 @@ CosmicCalculator also has features to he
 * CosmicCalculator spectral line calculations::  How they get affected by redshift.
 @end menu
 
-@node CosmicCalculator input options, CosmicCalculator basic cosmology calculations, Invoking astcosmiccal, Invoking astcosmiccal
+@node CosmicCalculator input options, CosmicCalculator basic cosmology calculations, astcosmiccal, astcosmiccal
 @subsubsection CosmicCalculator input options
 
 The inputs to CosmicCalculator can be specified with the following options:
@@ -31495,9 +31495,9 @@ $ astcosmiccal --listlines
 
 
 
-@node CosmicCalculator basic cosmology calculations, CosmicCalculator spectral line calculations, CosmicCalculator input options, Invoking astcosmiccal
+@node CosmicCalculator basic cosmology calculations, CosmicCalculator spectral line calculations, CosmicCalculator input options, astcosmiccal
 @subsubsection CosmicCalculator basic cosmology calculations
-By default, when no specific calculations are requested, CosmicCalculator will print a complete set of all its calculators (one line for each calculation, see @ref{Invoking astcosmiccal}).
+By default, when no specific calculations are requested, CosmicCalculator will print a complete set of all its calculators (one line for each calculation, see @ref{astcosmiccal}).
 The full list of calculations can be useful when you do not want any specific value, but just a general view.
 In other contexts (for example, in a batch script or during a discussion), you know exactly what you want and do not want to be distracted by all the extra information.
 
@@ -31612,7 +31612,7 @@ The comoving volume in Megaparsecs cube
 
 
 
-@node CosmicCalculator spectral line calculations,  , CosmicCalculator basic cosmology calculations, Invoking astcosmiccal
+@node CosmicCalculator spectral line calculations,  , CosmicCalculator basic cosmology calculations, astcosmiccal
 @subsubsection CosmicCalculator spectral line calculations
 
 @cindex Rest frame wavelength
@@ -31827,10 +31827,10 @@ But we will leave the implementation of
 @end itemize
 
 @menu
-* Invoking astscript-sort-by-night::  Inputs and outputs to this script.
+* astscript-sort-by-night::             Inputs and outputs to this script.
 @end menu
 
-@node Invoking astscript-sort-by-night,  , Sort FITS files by night, Sort FITS files by night
+@node astscript-sort-by-night,  , Sort FITS files by night, Sort FITS files by night
 @subsection Invoking astscript-sort-by-night
 
 This installed script will read a FITS date formatted value from the given keyword, and classify the input FITS files into individual nights.
@@ -31982,10 +31982,10 @@ Gnuastro's @file{astscript-radial-profil
 This script uses @ref{MakeProfiles} to generate elliptical apertures with the values equal to the distance from the center of the object and @ref{MakeCatalog} for measuring the values over the apertures.
 
 @menu
-* Invoking astscript-radial-profile::  How to call astscript-radial-profile
+* astscript-radial-profile::    How to call astscript-radial-profile
 @end menu
 
-@node Invoking astscript-radial-profile,  , Generate radial profile, Generate radial profile
+@node astscript-radial-profile,  , Generate radial profile, Generate radial profile
 @subsection Invoking astscript-radial-profile
 
 This installed script will measure the radial profile of an object within an image.
@@ -32240,7 +32240,7 @@ This option can also be called multiple
 @cartouche
 @noindent
 @strong{Masking background/foreground objects:} For crude rejection of outliers, you can use sigma-clipping using MakeCatalog measurements like @option{--sigclip-mean} or @option{--sigclip-mean-sb} (see @ref{MakeCatalog measurements}).
-To properly mask the effect of background/foreground objects from your target object's radial profile, you can use @command{astscript-psf-stamp} script, see @ref{Invoking astscript-psf-stamp}, and feed it the output of @ref{Segment}.
+To properly mask the effect of background/foreground objects from your target object's radial profile, you can use @command{astscript-psf-stamp} script, see @ref{astscript-psf-stamp}, and feed it the output of @ref{Segment}.
 This script will mask unwanted objects from the image that is later used to measure the radial profile.
 @end cartouche
 
@@ -32273,7 +32273,7 @@ This is necessary when you request measu
 @itemx --zeroisnotblank
 Account for zero-valued pixels in the profile.
 By default, such pixels are not considered (when this script crops the necessary region of the image before generating the profile).
-The long format of this option is identical to a similarly named option in Crop (see @ref{Invoking astcrop}).
+The long format of this option is identical to a similarly named option in Crop (see @ref{astcrop}).
 When this option is called, it is passed directly to Crop, therefore the zero-valued pixels are not considered as blank and used in the profile creation.
 
 @item -i FLT/STR
@@ -32332,10 +32332,10 @@ In this section we describe a simple ins
 SAO DS9@footnote{@url{http://ds9.si.edu}} is one of the most common FITS image visualization tools in astronomy and is free software.
 
 @menu
-* Invoking astscript-ds9-region::  How to call astscript-ds9-region
+* astscript-ds9-region::        How to call astscript-ds9-region
 @end menu
 
-@node Invoking astscript-ds9-region,  , SAO DS9 region files from table, SAO DS9 region files from table
+@node astscript-ds9-region,  , SAO DS9 region files from table, SAO DS9 region files from table
 @subsection Invoking astscript-ds9-region
 
 This installed script will read two positional columns within an input table and generate an SAO DS9 region file to visualize the position of the given objects over an image.
@@ -32496,13 +32496,13 @@ If @file{foo.fits} only consists of one
 
 On the other hand, for visualizing the contents of tables (that are also commonly stored in the FITS format), you need to call a different software (most commonly, people use TOPCAT, see @ref{TOPCAT}).
 And to make things more inconvenient, by default both of these are only installed as command-line software, so while you are navigating in your GUI, you need to open a terminal there, and run these commands.
-All of the issues above are the founding purpose of the installed script that is introduced in @ref{Invoking astscript-fits-view}.
+All of the issues above are the founding purpose of the installed script that is introduced in @ref{astscript-fits-view}.
 
 @menu
-* Invoking astscript-fits-view::  How to call this script
+* astscript-fits-view::           How to call this script
 @end menu
 
-@node Invoking astscript-fits-view,  , Viewing FITS file contents with DS9 or TOPCAT, Viewing FITS file contents with DS9 or TOPCAT
+@node astscript-fits-view,  , Viewing FITS file contents with DS9 or TOPCAT, Viewing FITS file contents with DS9 or TOPCAT
 @subsection Invoking astscript-fits-view
 
 Given any number of FITS files, this script will either open SAO DS9 (for images or cubes) or TOPCAT (for tables) to visualize their contents in a graphic user interface (GUI).
@@ -32659,13 +32659,13 @@ Since a zero point of 0 was used for the
 
 In the ``Tutorials'' chapter of this Gnuastro book, there are two tutorials dedicated to the usage of this script.
 The first uses an image as a reference (@ref{Zero point tutorial with reference image}) and the second uses a catalog (@ref{Zero point tutorial with reference catalog}).
-For the full set of options an a detailed description of each, see @ref{Invoking astscript-zeropoint}.
+For the full set of options an a detailed description of each, see @ref{astscript-zeropoint}.
 
 @menu
-* Invoking astscript-zeropoint::  How to call the script
+* astscript-zeropoint::           How to call the script
 @end menu
 
-@node Invoking astscript-zeropoint,  , Zero point estimation, Zero point estimation
+@node astscript-zeropoint,  , Zero point estimation, Zero point estimation
 @subsection Invoking astscript-zeropoint
 This installed script will calculate the zero point of an input image to calibrate it.
 The reference can be an image or catalog (which have been previously calibrated)
@@ -32716,7 +32716,7 @@ The @option{--keeptmp} option can be use
 * zero point options::          List and details of options.
 @end menu
 
-@node zero point output, zero point options, Invoking astscript-zeropoint, Invoking astscript-zeropoint
+@node zero point output, zero point options, astscript-zeropoint, astscript-zeropoint
 @subsubsection astscript-zeropoint output
 
 The output will be a multi-extension FITS table.
@@ -32753,7 +32753,7 @@ $ astfits out.fits -h1 | grep ^ZP
 $ astfits jplus-zeropoint.fits -h1 --keyvalue=ZPVALUE
 @end example
 
-@node zero point options,  , zero point output, Invoking astscript-zeropoint
+@node zero point options,  , zero point output, astscript-zeropoint
 @subsubsection astscript-zeropoint options
 
 All the operating phases of the this script can be customized through the options below.
@@ -32936,15 +32936,15 @@ For example in the XDF survey is focused
 These are very small objects and within that small footprint (of just 1 arcmin) we have thousands of them.
 However, the LIGHTS survey is focused on the halos of large nearby galaxies (that can be more than 10 arcminutes wide!).
 
-In @ref{Invoking astscript-pointing-simulate} of Gnuastro's @ref{Installed scripts} is described in detail.
+In @ref{astscript-pointing-simulate} of Gnuastro's @ref{Installed scripts} is described in detail.
 This script is designed to simplify the process of selecting the best pointing pattern for your observation strategy.
 For a practical tutorial on using this script, see @ref{Pointing pattern design}.
 
 @menu
-* Invoking astscript-pointing-simulate::  Options and running mode.
+* astscript-pointing-simulate::           Options and running mode.
 @end menu
 
-@node Invoking astscript-pointing-simulate,  , Pointing pattern simulation, Pointing pattern simulation
+@node astscript-pointing-simulate,  , Pointing pattern simulation, Pointing pattern simulation
 @subsection Invoking astscript-pointing-simulate
 
 This installed script will simulate a final stacked image from a certain pointing pattern (given as a table).
@@ -33147,14 +33147,14 @@ The tutorial uses a real dataset and inc
 
 @menu
 * Overview of the PSF scripts::  Summary of concepts and methods
-* Invoking astscript-psf-select-stars::  Select good starts within an image.
-* Invoking astscript-psf-stamp::  Make a stamp of each star to stack.
-* Invoking astscript-psf-unite::  Merge stacks of different regions of PSF.
-* Invoking astscript-psf-scale-factor::  Calculate factor to scale PSF to star.
-* Invoking astscript-psf-subtract::  Put the PSF in the image to subtract.
+* astscript-psf-select-stars::  Select good starts within an image.
+* astscript-psf-stamp::  Make a stamp of each star to stack.
+* astscript-psf-unite::  Merge stacks of different regions of PSF.
+* astscript-psf-scale-factor::  Calculate factor to scale PSF to star.
+* astscript-psf-subtract::  Put the PSF in the image to subtract.
 @end menu
 
-@node Overview of the PSF scripts, Invoking astscript-psf-select-stars, PSF construction and subtraction, PSF construction and subtraction
+@node Overview of the PSF scripts, astscript-psf-select-stars, PSF construction and subtraction, PSF construction and subtraction
 @subsection Overview of the PSF scripts
 
 To obtain an extended and non-parametric PSF, several steps are necessary and we will go through them here.
@@ -33182,11 +33182,11 @@ But you cannot blindly use all the stars
 For example, we do not want contamination from other bright, and nearby objects.
 The first script below is therefore designed for selecting only good star candidates in your image.
 It will use different criteria, for example, good parallax (where available, to avoid confusion with galaxies), not being near to bright stars, axis ratio, etc.
-For more on this script, see @ref{Invoking astscript-psf-select-stars}.
+For more on this script, see @ref{astscript-psf-select-stars}.
 
 Once the catalog of stars is constructed, another script is in charge of making appropriate stamps of the stars.
 Each stamp is a cropped image of the star with the desired size, normalization of the flux, and mask of the contaminant objects.
-For more on this script, see @ref{Invoking astscript-psf-stamp}
+For more on this script, see @ref{astscript-psf-stamp}
 After obtaining a set of star stamps, they can be stacked for obtaining the combined PSF from many stars (for example, with @ref{Stacking operators}).
 
 In the combined PSF, the masked background objects of each star's image will be covered and the signal-to-noise ratio will increase, giving a very nice view of the ``clean'' PSF.
@@ -33202,16 +33202,16 @@ But in the example dataset from the tuto
 
 Once clean stacks of different parts of the PSF have been constructed through the steps above, it is therefore necessary to blend them all into one.
 This is done by finding a common radial region in both, and scaling the inner region by a factor to add with the outer region.
-This is not trivial, therefore, a third script is in charge of it, see @ref{Invoking astscript-psf-unite}.
+This is not trivial, therefore, a third script is in charge of it, see @ref{astscript-psf-unite}.
 
 Having constructed the PSF as described above (or by any other procedure), it can be scaled to the magnitude of the various stars in the image to get subtracted (and thus remove the extended/bright wings; better showing the background objects of interest).
 Note that the absolute flux of a PSF is meaningless (and in fact, it is usually normalized to have a total sum of unity!), so it should be scaled.
 We therefore have another script that will calculate the scale (multiplication) factor of the PSF for each star.
-For more on the scaling script, see @ref{Invoking astscript-psf-scale-factor}.
+For more on the scaling script, see @ref{astscript-psf-scale-factor}.
 
 Once the flux factor has been computed, a final script is in charge of placing the scaled PSF over the proper location in the image, and subtracting it.
 It is also possible to only obtain the modeled star by the PSF.
-For more on the scaling and positioning script, see @ref{Invoking astscript-psf-subtract}.
+For more on the scaling and positioning script, see @ref{astscript-psf-subtract}.
 
 As mentioned above, in the following sections, each script has its own documentation and list of options for very detailed customization (if necessary).
 But if you are new to these scripts, before continuing, we recommend that you do the tutorial @ref{Building the extended PSF}.
@@ -33221,7 +33221,7 @@ Just do not forget to run every command,
 
 
 
-@node Invoking astscript-psf-select-stars, Invoking astscript-psf-stamp, Overview of the PSF scripts, PSF construction and subtraction
+@node astscript-psf-select-stars, astscript-psf-stamp, Overview of the PSF scripts, PSF construction and subtraction
 @subsection Invoking astscript-psf-select-stars
 This installed script will select good star candidates for constructing a PSF.
 It will consider stars within a given range of magnitudes without nearby contaminant objects.
@@ -33378,7 +33378,7 @@ The output name of the final catalog con
 
 
 
-@node Invoking astscript-psf-stamp, Invoking astscript-psf-unite, Invoking astscript-psf-select-stars, PSF construction and subtraction
+@node astscript-psf-stamp, astscript-psf-unite, astscript-psf-select-stars, PSF construction and subtraction
 @subsection Invoking astscript-psf-stamp
 This installed script will generate a stamp of fixed size, centered at the provided coordinates (performing sub-pixel re-gridding if necessary) and normalized at a certain normalization radius.
 Optionally, it will also mask all the other background sources.
@@ -33566,7 +33566,7 @@ The main reason of setting this name is
 
 
 
-@node Invoking astscript-psf-unite, Invoking astscript-psf-scale-factor, Invoking astscript-psf-stamp, PSF construction and subtraction
+@node astscript-psf-unite, astscript-psf-scale-factor, astscript-psf-stamp, PSF construction and subtraction
 @subsection Invoking astscript-psf-unite
 This installed script will join two PSF images at a given radius.
 This operation is commonly used when merging (uniting) the inner and outer parts of the PSF.
@@ -33626,7 +33626,7 @@ The HDU/extension of the inner PSF (opti
 @itemx --scale=FLT
 Factor by which the inner part (@option{--inner}) is multiplied.
 This factor is necessary to put the two different parts of the PSF at the same flux level.
-A convenient way of obtaining this value is by using the script @file{astscript-model-scale-factor}, see @ref{Invoking astscript-psf-scale-factor}.
+A convenient way of obtaining this value is by using the script @file{astscript-model-scale-factor}, see @ref{astscript-psf-scale-factor}.
 There is also a full tutorial on using all the @command{astscript-psf-*} installed scripts together, see  @ref{Building the extended PSF}.
 We recommend doing that tutorial before starting to work on your own datasets.
 
@@ -33673,7 +33673,7 @@ This option is useful for debugging and
 
 
 
-@node Invoking astscript-psf-scale-factor, Invoking astscript-psf-subtract, Invoking astscript-psf-unite, PSF construction and subtraction
+@node astscript-psf-scale-factor, astscript-psf-subtract, astscript-psf-unite, PSF construction and subtraction
 @subsection Invoking astscript-psf-scale-factor
 This installed script will compute the multiplicative factor (scale) that is necessary to match the PSF to a given star.
 The match in flux is done within a ring of pixels.
@@ -33720,9 +33720,9 @@ To fully understand the process on first
 The most common use-cases of this scale factor are:
 @enumerate
 @item
-To find the factor for joining two different parts of the same PSF, see @ref{Invoking astscript-psf-unite}.
+To find the factor for joining two different parts of the same PSF, see @ref{astscript-psf-unite}.
 @item
-When modeling a star in order to subtract it using the PSF, see @ref{Invoking astscript-psf-subtract}.
+When modeling a star in order to subtract it using the PSF, see @ref{astscript-psf-subtract}.
 @end enumerate
 
 For a full tutorial on how to use this script along with the other @command{astscript-psf-*} scripts in Gnuastro, please see @ref{Building the extended PSF}.
@@ -33803,7 +33803,7 @@ This option is useful for debugging and
 
 
 
-@node Invoking astscript-psf-subtract,  , Invoking astscript-psf-scale-factor, PSF construction and subtraction
+@node astscript-psf-subtract,  , astscript-psf-scale-factor, PSF construction and subtraction
 @subsection Invoking astscript-psf-subtract
 This installed script will put the provided PSF into a given position within the input image (implementing sub-pixel adjustments where necessary), and then it will subtract it.
 It is aimed at modeling and subtracting the scattered light field of an input image.
@@ -33887,7 +33887,7 @@ If the central position does not fall in
 @itemx --scale=FLT
 Factor by which the PSF (@option{--psf}) is multiplied.
 This factor is necessary to put the PSF with the desired flux level.
-A convenient way of obtaining this value is by using the script @file{astscript-scale-factor}, see @ref{Invoking astscript-psf-scale-factor}.
+A convenient way of obtaining this value is by using the script @file{astscript-scale-factor}, see @ref{astscript-psf-scale-factor}.
 For a full tutorial on using the @command{astscript-psf-*} scripts together, see @ref{Building the extended PSF}.
 
 @item -t
@@ -34532,10 +34532,10 @@ Please see @ref{Optional dependencies} f
 @end cartouche
 
 @menu
-* Invoking astbuildprog::       Options and examples for using this program.
+* astbuildprog::                Options and examples for using this program.
 @end menu
 
-@node Invoking astbuildprog,  , BuildProgram, BuildProgram
+@node astbuildprog,  , BuildProgram, BuildProgram
 @subsection Invoking BuildProgram
 
 BuildProgram will compile and link a C source program with Gnuastro's library and all its dependencies, greatly facilitating the compilation and running of small programs that use Gnuastro's library.
@@ -37243,7 +37243,7 @@ This function is just for column informa
 
 @deftypefun void gal_table_print_info (gal_data_t @code{*allcols}, size_t @code{numcols}, size_t @code{numrows}, char @code{*hdu_option_name})
 Print the column information for all the columns (output of @code{gal_table_info}) to standard output.
-The output is in the same format as this command with Gnuastro Table program (see @ref{Invoking asttable}):
+The output is in the same format as this command with Gnuastro Table program (see @ref{asttable}):
 @example
 $ asttable --info table.fits
 @end example
@@ -41782,7 +41782,7 @@ The @code{warp} library functions are @e
 Acceptable fraction of output pixel that is covered by input pixels.
 The value should be between 0 and 1 (inclusive).
 If the area of an output pixel is covered by less than this fraction, its value will be @code{NaN}.
-For more, see the description of @option{--coveredfrac} in @ref{Invoking astwarp}.
+For more, see the description of @option{--coveredfrac} in @ref{astwarp}.
 
 @item size_t edgesampling
 Set the number of extra vertices along each edge of the output pixel's polygon to account for potential curvature due to projection or distortion.
@@ -43040,7 +43040,7 @@ main(void)
 @subsection Library demo - Warp to another image
 Gnuastro's warp library (that you can access by including @file{gnuastro/warp.h}) allows you to resample an image from a grid to another entirely using the WCSLIB (while accounting for distortions if necessary; see @ref{Warp library}).
 The Warp library uses a pixel-mixing or area-based resampling approach which is fully described in @ref{Resampling}.
-The most generic uses cases for this library are already available in the @ref{Invoking astwarp} program.
+The most generic uses cases for this library are already available in the @ref{astwarp} program.
 For a related demo (where the output grid and WCS are constructed from scratch), see @ref{Library demo - Warp to new grid}.
 
 In the example below, we are warping the @code{input.fits} file to the same pixel grid and WCS as @code{reference.fits} image (assuming it is in hdu @code{0}).
@@ -43163,7 +43163,7 @@ main(void)
 @subsection Library demo - Warp to new grid
 Gnuastro's warp library (that you can access by including @file{gnuastro/warp.h}) allows you to resample an image from a grid to another entirely using the WCSLIB (while accounting for distortions if necessary; see @ref{Warp library}).
 The Warp library uses a pixel-mixing or area-based resampling approach which is fully described in @ref{Resampling}.
-The most generic uses cases for this library are already available in the @ref{Invoking astwarp} program.
+The most generic uses cases for this library are already available in the @ref{astwarp} program.
 For a related demo (where the output grid and WCS are imported from another file), see @ref{Library demo - Warp to another image}.
 
 In the example below, we'll assume you have the SDSS image downloaded in @ref{Downloading and validating input data}.
