--- gnuastro-0.16/doc/gnuastro.texi.orig	2021-10-10 20:14:28.000000000 +0200
+++ gnuastro-0.16/doc/gnuastro.texi	2021-11-27 16:39:48.326765277 +0100
@@ -47,68 +47,68 @@ A copy of the license is included in the
 @c To include in the info directory.
 @dircategory Astronomy
 @direntry
-* Gnuastro: (gnuastro).       GNU Astronomy Utilities.
-* libgnuastro: (gnuastro)Gnuastro library. Full Gnuastro library doc.
+* Gnuastro: (gnuastro).			GNU Astronomy Utilities
+* libgnuastro: (gnuastro)Gnuastro library.	Full Gnuastro library doc
 
-* help-gnuastro: (gnuastro)help-gnuastro mailing list. Getting help.
+* help-gnuastro: (gnuastro)help-gnuastro mailing list.	Getting help
 
-* bug-gnuastro: (gnuastro)Report a bug. How to report bugs
+* bug-gnuastro: (gnuastro)Report a bug.	How to report bugs
 
-* Arithmetic: (gnuastro)Arithmetic. Arithmetic operations on pixels.
-* astarithmetic: (gnuastro)Invoking astarithmetic. Options to Arithmetic.
+* Arithmetic: (gnuastro)Arithmetic.	Arithmetic operations on pixels
+* astarithmetic: (gnuastro)astarithmetic.	Options to Arithmetic
 
-* BuildProgram: (gnuastro)BuildProgram. Compile and run programs using Gnuastro's library.
-* astbuildprog: (gnuastro)Invoking astbuildprog. Options to BuildProgram.
+* BuildProgram: (gnuastro)BuildProgram.	Compile and run programs using Gnuastro's library
+* astbuildprog: (gnuastro)astbuildprog.	Options to BuildProgram
 
-* ConvertType: (gnuastro)ConvertType. Convert different file types.
-* astconvertt: (gnuastro)Invoking astconvertt. Options to ConvertType.
+* ConvertType: (gnuastro)ConvertType.	Convert different file types
+* astconvertt: (gnuastro)astconvertt.	Options to ConvertType
 
-* Convolve: (gnuastro)Convolve. Convolve an input file with kernel.
-* astconvolve: (gnuastro)Invoking astconvolve. Options to Convolve.
+* Convolve: (gnuastro)Convolve.		Convolve an input file with kernel
+* astconvolve: (gnuastro)astconvolve.	Options to Convolve
 
-* CosmicCalculator: (gnuastro)CosmicCalculator. For cosmological params.
-* astcosmiccal: (gnuastro)Invoking astcosmiccal. Options to CosmicCalculator.
+* CosmicCalculator: (gnuastro)CosmicCalculator.	For cosmological params
+* astcosmiccal: (gnuastro)astcosmiccal.	Options to CosmicCalculator
 
-* Crop: (gnuastro)Crop. Crop region(s) from image(s).
-* astcrop: (gnuastro)Invoking astcrop. Options to Crop.
+* Crop: (gnuastro)Crop.			Crop region(s) from image(s)
+* astcrop: (gnuastro)astcrop.		Options to Crop
 
-* Fits: (gnuastro)Fits. View and manipulate FITS extensions and keywords.
-* astfits: (gnuastro)Invoking astfits. Options to Fits.
+* Fits: (gnuastro)Fits.			View and manipulate FITS extensions and keywords
+* astfits: (gnuastro)astfits.		Options to Fits
 
-* MakeCatalog: (gnuastro)MakeCatalog. Make a catalog from labeled image.
-* astmkcatalog: (gnuastro)Invoking astmkcatalog. Options to MakeCatalog.
+* MakeCatalog: (gnuastro)MakeCatalog.	Make a catalog from labeled image
+* astmkcatalog: (gnuastro)astmkcatalog.	Options to MakeCatalog
 
-* MakeNoise: (gnuastro)MakeNoise. Make (add) noise to an image.
-* astmknoise: (gnuastro)Invoking astmknoise. Options to MakeNoise.
+* MakeNoise: (gnuastro)MakeNoise.	Make (add) noise to an image
+* astmknoise: (gnuastro)astmknoise.	Options to MakeNoise
 
-* MakeProfiles: (gnuastro)MakeProfiles. Make mock profiles.
-* astmkprof: (gnuastro)Invoking astmkprof. Options to MakeProfiles.
+* MakeProfiles: (gnuastro)MakeProfiles.	Make mock profiles
+* astmkprof: (gnuastro)astmkprof.	Options to MakeProfiles
 
-* Match: (gnuastro)Match. Match two separate catalogs.
-* astmatch: (gnuastro)Invoking astmatch. Options to Match.
+* Match: (gnuastro)Match.		Match two separate catalogs
+* astmatch: (gnuastro)astmatch.		Options to Match
 
-* NoiseChisel: (gnuastro)NoiseChisel. Detect signal in noise.
-* astnoisechisel: (gnuastro)Invoking astnoisechisel. Options to NoiseChisel.
+* NoiseChisel: (gnuastro)NoiseChisel.	Detect signal in noise
+* astnoisechisel: (gnuastro)astnoisechisel.	Options to NoiseChisel
 
-* Segment: (gnuastro)Segment. Segment detections based on signal structure.
-* astsegment: (gnuastro)Invoking astsegment. Options to Segment.
+* Segment: (gnuastro)Segment.		Segment detections based on signal structure
+* astsegment: (gnuastro)astsegment.	Options to Segment
 
-* Query: (gnuastro)Query. Access remote databases for downloading data.
-* astquery: (gnuastro)Invoking astquery. Options to Query.
+* Query: (gnuastro)Query.		Access remote databases for downloading data
+* astquery: (gnuastro)astquery.		Options to Query
 
-* Statistics: (gnuastro)Statistics. Get image Statistics.
-* aststatistics: (gnuastro)Invoking aststatistics. Options to Statistics.
+* Statistics: (gnuastro)Statistics.	Get image Statistics
+* aststatistics: (gnuastro)aststatistics.	Options to Statistics
 
-* Table: (gnuastro)Table. Read and write FITS binary or ASCII tables.
-* asttable: (gnuastro)Invoking asttable. Options to Table.
+* Table: (gnuastro)Table.		Read and write FITS binary or ASCII tables
+* asttable: (gnuastro)asttable.		Options to Table
 
-* Warp: (gnuastro)Warp. Warp a dataset to a new grid.
-* astwarp: (gnuastro)Invoking astwarp. Options to Warp.
+* Warp: (gnuastro)Warp.			Warp a dataset to a new grid
+* astwarp: (gnuastro)astwarp.		Options to Warp
 
-* astscript: (gnuastro)Installed scripts. Gnuastro's installed scripts.
-* astscript-sort-by-night: (gnuastro)Invoking astscript-sort-by-night. Options to this script
-* astscript-radial-profile: (gnuastro)Invoking astscript-radial-profile. Options to this script
-* astscript-ds9-region: (gnuastro)Invoking astscript-ds9-region. Options to this script
+* astscript: (gnuastro)Installed scripts.	Gnuastro's installed scripts
+* astscript-sort-by-night: (gnuastro)astscript-sort-by-night.	Options to this script
+* astscript-radial-profile: (gnuastro)astscript-radial-profile.	Options to this script
+* astscript-ds9-region: (gnuastro)astscript-ds9-region.		Options to this script
 
 @end direntry
 
@@ -392,7 +392,7 @@ Data containers
 
 Fits
 
-* Invoking astfits::            Arguments and options to Header.
+* astfits::                     Arguments and options to Header.
 
 Invoking Fits
 
@@ -405,7 +405,7 @@ ConvertType
 * Color::                       Some explanations on color.
 * Aligning images with small WCS offsets::  When the WCS slightly differs.
 * Annotations for figure in paper::  Adding coordinates or physical scale.
-* Invoking astconvertt::        Options and arguments to ConvertType.
+* astconvertt::                 Options and arguments to ConvertType.
 
 Annotations for figure in paper
 
@@ -415,12 +415,12 @@ Table
 
 * Column arithmetic::           How to do operations on table columns.
 * Operation precedence in Table::  Order of running options in Table.
-* Invoking asttable::           Options and arguments to Table.
+* asttable::                    Options and arguments to Table.
 
 Query
 
 * Available databases::         List of available databases to Query.
-* Invoking astquery::           Inputs, outputs and configuration of Query.
+* astquery::                    Inputs, outputs and configuration of Query.
 
 Data manipulation
 
@@ -434,7 +434,7 @@ Crop
 * Crop modes::                  Basic modes to define crop region.
 * Crop section syntax::         How to define a section to crop.
 * Blank pixels::                Pixels with no value.
-* Invoking astcrop::            Calling Crop on the command-line
+* astcrop::                     Calling Crop on the command-line
 
 Invoking Crop
 
@@ -446,7 +446,7 @@ Arithmetic
 
 * Reverse polish notation::     The current notation style for Arithmetic
 * Arithmetic operators::        List of operators known to Arithmetic
-* Invoking astarithmetic::      How to run Arithmetic: options and output
+* astarithmetic::               How to run Arithmetic: options and output
 
 Arithmetic operators
 
@@ -473,7 +473,7 @@ Convolve
 * Frequency domain and Fourier operations::  Using frequencies in input.
 * Spatial vs. Frequency domain::  When to use which?
 * Convolution kernel::          How to specify the convolution kernel.
-* Invoking astconvolve::        Options and argument to Convolve.
+* astconvolve::                 Options and argument to Convolve.
 
 Spatial domain convolution
 
@@ -498,7 +498,7 @@ Warp
 * Warping basics::              Basics of coordinate transformation.
 * Merging multiple warpings::   How to merge multiple matrices.
 * Resampling::                  Warping an image is re-sampling it.
-* Invoking astwarp::            Arguments and options for Warp.
+* astwarp::                     Arguments and options for Warp.
 
 Data analysis
 
@@ -514,7 +514,7 @@ Statistics
 * 2D Histograms::               Plotting the distribution of two variables.
 * Sigma clipping::              Definition of @mymath{\sigma}-clipping.
 * Sky value::                   Definition and derivation of the Sky value.
-* Invoking aststatistics::      Arguments and options to Statistics.
+* aststatistics::               Arguments and options to Statistics.
 
 2D Histograms
 
@@ -530,7 +530,7 @@ Sky value
 NoiseChisel
 
 * NoiseChisel changes after publication::  Updates since published papers.
-* Invoking astnoisechisel::     Options and arguments for NoiseChisel.
+* astnoisechisel::              Options and arguments for NoiseChisel.
 
 Invoking NoiseChisel
 
@@ -540,7 +540,7 @@ Invoking NoiseChisel
 
 Segment
 
-* Invoking astsegment::         Inputs, outputs and options to Segment
+* astsegment::                  Inputs, outputs and options to Segment
 
 Invoking Segment
 
@@ -555,7 +555,7 @@ MakeCatalog
 * Quantifying measurement limits::  For comparing different catalogs.
 * Measuring elliptical parameters::  Estimating elliptical parameters.
 * Adding new columns to MakeCatalog::  How to add new columns.
-* Invoking astmkcatalog::       Options and arguments to MakeCatalog.
+* astmkcatalog::                Options and arguments to MakeCatalog.
 
 Quantifying measurement limits
 
@@ -575,7 +575,7 @@ Invoking MakeCatalog
 
 Match
 
-* Invoking astmatch::           Inputs, outputs and options of Match
+* astmatch::                    Inputs, outputs and options of Match
 
 Modeling and fitting
 
@@ -587,7 +587,7 @@ MakeProfiles
 * Modeling basics::             Astronomical modeling basics.
 * If convolving afterwards::    Considerations for convolving later.
 * Profile magnitude::           Definition of total profile magnitude.
-* Invoking astmkprof::          Inputs and Options for MakeProfiles.
+* astmkprof::                   Inputs and Options for MakeProfiles.
 
 Modeling basics
 
@@ -608,7 +608,7 @@ Invoking MakeProfiles
 MakeNoise
 
 * Noise basics::                Noise concepts and definitions.
-* Invoking astmknoise::         Options and arguments to MakeNoise.
+* astmknoise::                  Options and arguments to MakeNoise.
 
 Noise basics
 
@@ -625,7 +625,7 @@ CosmicCalculator
 
 * Distance on a 2D curved space::  Distances in 2D for simplicity
 * Extending distance concepts to 3D::  Going to 3D (our real universe).
-* Invoking astcosmiccal::       How to run CosmicCalculator
+* astcosmiccal::                How to run CosmicCalculator
 
 Invoking CosmicCalculator
 
@@ -641,15 +641,15 @@ Installed scripts
 
 Sort FITS files by night
 
-* Invoking astscript-sort-by-night::  Inputs and outputs to this script.
+* astscript-sort-by-night::     Inputs and outputs to this script.
 
 Generate radial profile
 
-* Invoking astscript-radial-profile::  How to call astscript-radial-profile
+* astscript-radial-profile::    How to call astscript-radial-profile
 
 SAO DS9 region files from table
 
-* Invoking astscript-ds9-region::  How to call astscript-ds9-region
+* astscript-ds9-region::        How to call astscript-ds9-region
 
 Library
 
@@ -666,7 +666,7 @@ Review of library fundamentals
 
 BuildProgram
 
-* Invoking astbuildprog::       Options and examples for using this program.
+* astbuildprog::                Options and examples for using this program.
 
 Gnuastro library
 
@@ -884,7 +884,7 @@ $ echo "source /usr/local/share/gnuastro
 The last command is to enable Gnuastro's custom TAB completion in Bash.
 For more on this useful feature, see @ref{Shell TAB completion}).
 
-For each program there is an `Invoke ProgramName' sub-section in this book which explains how the programs should be run on the command-line (for example @ref{Invoking asttable}).
+For each program there is an `Invoke ProgramName' sub-section in this book which explains how the programs should be run on the command-line (for example @ref{asttable}).
 
 Some complete Tutorials are also available in this book with common Gnuastro usage scenarios in astronomical research.
 They even contain links to download the necessary data, and thoroughly describe every step of the process (the science, statistics and optimal usage of the command-line).
@@ -1639,7 +1639,7 @@ Because bright/large galaxies and stars@
 In these tutorials, we have intentionally avoided too many cross references to make it more easy to read.
 For more information about a particular program, you can visit the section with the same name as the program in this book.
 Each program section in the subsequent chapters starts by explaining the general concepts behind what it does, for example see @ref{Convolve}.
-If you only want practical information on running a program, for example its options/configuration, input(s) and output(s), please consult the subsection titled ``Invoking ProgramName'', for example see @ref{Invoking astnoisechisel}.
+If you only want practical information on running a program, for example its options/configuration, input(s) and output(s), please consult the subsection titled ``ProgramName'', for example see @ref{astnoisechisel}.
 For an explanation of the conventions we use in the example codes through the book, please see @ref{Conventions}.
 
 @menu
@@ -2120,8 +2120,8 @@ To return to the previous page, press @k
 If you are searching for a specific phrase in the whole book (for example an option name), press @key{s} and type your search phrase and end it with an @key{<ENTER>}.
 
 You don't need to start from the top of the manual every time.
-For example, to get to @ref{Invoking astnoisechisel}, run the following command.
-In general, all programs have such an ``Invoking ProgramName'' section in this book.
+For example, to get to @ref{astnoisechisel}, run the following command.
+In general, all programs have such an ``ProgramName'' section in this book.
 These sections are specifically for the description of inputs, outputs and configuration options of each program.
 You can access them directly for each program by giving its executable name to Info.
 
@@ -2819,7 +2819,7 @@ As you see in the matrix that is printed
 However, if you run Warp multiple times, the pixels will be mixed multiple times, creating a strong artificial blur/smoothing, or stronger correlated noise.
 
 Recall that the merging of multiple warps is done through matrix multiplication, therefore order matters in the separate operations.
-At a lower level, through Warp's @option{--matrix} option, you can directly request your desired final warp and don't have to break it up into different warps like above (see @ref{Invoking astwarp}).
+At a lower level, through Warp's @option{--matrix} option, you can directly request your desired final warp and don't have to break it up into different warps like above (see @ref{astwarp}).
 
 Fortunately these datasets are already aligned to the same pixel grid, so you don't actually need the files that were just generated.You can safely delete them all with the following command.
 Here, you see why we put the processed outputs that we need later into a separate directory.
@@ -3762,7 +3762,7 @@ $ cat apertures.txt
 We can now feed this catalog into MakeProfiles using the command below to build the apertures over the image.
 The most important option for this particular job is @option{--mforflatpix}, it tells MakeProfiles that the values in the magnitude column should be used for each pixel of a flat profile.
 Without it, MakeProfiles would build the profiles such that the @emph{sum} of the pixels of each profile would have a @emph{magnitude} (in log-scale) of the value given in that column (what you would expect when simulating a galaxy for example).
-See @ref{Invoking astmkprof} for details on the options.
+See @ref{astmkprof} for details on the options.
 
 @example
 $ astmkprof apertures.txt --background=flat-ir/xdf-f160w.fits \
@@ -6929,7 +6929,7 @@ Afterwards, in @ref{Common options}, we'
 @cindex Arguments to programs
 @cindex Command-line arguments
 When you type a command on the command-line, it is passed onto the shell (a generic name for the program that manages the command-line) as a string of characters.
-As an example, see the ``Invoking ProgramName'' sections in this manual for some examples of commands with each program, like @ref{Invoking asttable}, @ref{Invoking astfits}, or @ref{Invoking aststatistics}.
+As an example, see the ``ProgramName'' sections in this manual for some examples of commands with each program, like @ref{asttable}, @ref{astfits}, or @ref{aststatistics}.
 
 The shell then brakes up your string into separate @emph{tokens} or @emph{words} using any @emph{metacharacters} (like white-space, tab, @command{|}, @command{>} or @command{;}) that are in the string.
 On the command-line, the first thing you usually enter is the name of the program you want to run.
@@ -6955,7 +6955,7 @@ Hence, when there multiple arguments, th
 The outputs of @option{--usage} and @option{--help} shows which arguments are optional and which are mandatory, see @ref{--usage}.
 
 As their name suggests, @emph{options} can be considered to be optional and most of the time, you don't have to worry about what order you specify them in.
-When the order does matter, or the option can be invoked multiple times, it is explicitly mentioned in the ``Invoking ProgramName'' section of each program (this is a very important aspect of an option).
+When the order does matter, or the option can be invoked multiple times, it is explicitly mentioned in the ``ProgramName'' section of each program (this is a very important aspect of an option).
 
 @cindex Metacharacters on the command-line In case your arguments or option values contain any of the shell's meta-characters, you have to quote them.
 If there is only one such character, you can use a backslash (@command{\}) before it.
@@ -6985,8 +6985,8 @@ $ astcrop --hdu="3; images(exposure > 10
 @node Arguments, Options, Arguments and options, Arguments and options
 @subsubsection Arguments
 In Gnuastro, arguments are almost exclusively used as the input data file names.
-Please consult the first few paragraph of the ``Invoking ProgramName'' section for each program for a description of what it expects as input, how many arguments, or input data, it accepts, or in what order.
-Everything particular about how a program treats arguments, is explained under the ``Invoking ProgramName'' section for that program.
+Please consult the first few paragraph of the ``ProgramName'' section for each program for a description of what it expects as input, how many arguments, or input data, it accepts, or in what order.
+Everything particular about how a program treats arguments, is explained under the ``ProgramName'' section for that program.
 
 @cindex Filename suffix
 @cindex Suffix (filename)
@@ -7043,7 +7043,7 @@ Command-line options allow configuring t
 A single option can be called in two ways: @emph{long} or @emph{short}.
 All options in Gnuastro accept the long format which has two hyphens an can have many characters (for example @option{--hdu}).
 Short options only have one hyphen (@key{-}) followed by one character (for example @option{-h}).
-You can see some examples in the list of options in @ref{Common options} or those for each program's ``Invoking ProgramName'' section.
+You can see some examples in the list of options in @ref{Common options} or those for each program's ``ProgramName'' section.
 Both formats are shown for those which support both.
 First the short is shown then the long.
 
@@ -7117,7 +7117,7 @@ If you are satisfied with the change, yo
 If the change wasn't satisfactory, you can remove the one you just added and not worry about forgetting the original value.
 Without this capability, you would have to memorize or save the original value somewhere else, run the command and then change the value again which is not at all convenient and is potentially cause lots of bugs.
 
-On the other hand, some options can be called multiple times in one run of a program and can thus take multiple values (for example see the @option{--column} option in @ref{Invoking asttable}.
+On the other hand, some options can be called multiple times in one run of a program and can thus take multiple values (for example see the @option{--column} option in @ref{asttable}.
 In these cases, the order of stored values is the same order that you specified on the command-line.
 
 @cindex Configuration files
@@ -7588,7 +7588,7 @@ As another example, if an option needs i
 Just note that the file name has to be already given on the command-line before reaching such options (that look into the contents of a file).
 
 But TAB completion is not limited to file types or contents.
-Arguments/Options that take certain fixed string values will directly suggest those strings with TAB, and completely ignore the file structure (for example spectral line names in @ref{Invoking astcosmiccal})!
+Arguments/Options that take certain fixed string values will directly suggest those strings with TAB, and completely ignore the file structure (for example spectral line names in @ref{astcosmiccal})!
 As another example, the option @option{--numthreads} option (to specify the number of threads to use by the program), will find the number of available threads on the system, and suggest the possible numbers with a TAB!
 
 To activate Gnuastro's custom TAB completion in Bash, you need to put the following line in one of your Bash startup files (for example @file{~/.bashrc}).
@@ -7708,7 +7708,7 @@ All the values must either be stored in
 In case the necessary parameters are not given through any of these methods, the program will print a missing option error and abort.
 The only exception to this is @option{--numthreads}, whose default value is determined at run-time using the number of threads available to your system, see @ref{Multi-threaded operations}.
 Of course, you can still provide a default value for the number of threads at any of the levels below, but if you don't, the program will not abort.
-Also note that through automatic output name generation, the value to the @option{--output} option is also not mandatory on the command-line or in the configuration files for all programs which don't rely on that value as an input@footnote{One example of a program which uses the value given to @option{--output} as an input is ConvertType, this value specifies the type of the output through the value to @option{--output}, see @ref{Invoking astconvertt}.}, see @ref{Automatic output}.
+Also note that through automatic output name generation, the value to the @option{--output} option is also not mandatory on the command-line or in the configuration files for all programs which don't rely on that value as an input@footnote{One example of a program which uses the value given to @option{--output} as an input is ConvertType, this value specifies the type of the output through the value to @option{--output}, see @ref{astconvertt}.}, see @ref{Automatic output}.
 
 
 
@@ -8083,7 +8083,7 @@ $ info astprogramname
 @end example
 
 @noindent
-you will be taken to the section titled ``Invoking ProgramName'' which explains the inputs and outputs along with the command-line options for that program.
+you will be taken to the section titled ``ProgramName'' which explains the inputs and outputs along with the command-line options for that program.
 Finally, if you run Info with the official program name, for example Crop or NoiseChisel:
 
 @example
@@ -8514,7 +8514,7 @@ Each column in the table contains the va
 For example, let's assume you have just ran MakeCatalog (see @ref{MakeCatalog}) on an image to measure some properties for the labeled regions (which might be detected galaxies for example) in the image.
 For each labeled region (detected galaxy), there will be a @emph{row} which groups its measured properties as @emph{columns}, one column for each property.
 One such property can be the object's magnitude, which is the sum of pixels with that label, or its center can be defined as the light-weighted average value of those pixels.
-Many such properties can be derived from the raw pixel values and their position, see @ref{Invoking astmkcatalog} for a long list.
+Many such properties can be derived from the raw pixel values and their position, see @ref{astmkcatalog} for a long list.
 
 As a summary, for each labeled region (or, galaxy) we have one @emph{row} and for each measured property we have one @emph{column}.
 This high-level structure is usually the first step for higher-level analysis, for example finding the stellar mass or photometric redshift from magnitudes in multiple colors.
@@ -9084,10 +9084,10 @@ For example you can copy or cut (copy an
 It also has features to delete, add, or edit meta-data keywords within one HDU.
 
 @menu
-* Invoking astfits::            Arguments and options to Header.
+* astfits::                     Arguments and options to Header.
 @end menu
 
-@node Invoking astfits,  , Fits, Fits
+@node astfits,  , Fits, Fits
 @subsection Invoking Fits
 
 Fits can print or manipulate the FITS file HDUs (extensions), meta-data keywords in a given HDU.
@@ -9176,7 +9176,7 @@ These two classes of options cannot be c
 
 
 
-@node HDU information and manipulation, Keyword inspection and manipulation, Invoking astfits, Invoking astfits
+@node HDU information and manipulation, Keyword inspection and manipulation, astfits, astfits
 @subsubsection HDU information and manipulation
 Each FITS file header data unit, or HDU (also known as an extension) is an independent dataset (data + meta-data).
 Multiple HDUs can be stored in one FITS file, see @ref{Fits}.
@@ -9194,7 +9194,7 @@ Note that this option must be called alo
 It is thus useful in scripts, for example when you need to do check the number of extensions in a FITS file.
 
 For a complete list of basic meta-data on the extensions in a FITS file, don't use any of the options in this section or in @ref{Keyword inspection and manipulation}.
-For more, see @ref{Invoking astfits}.
+For more, see @ref{astfits}.
 
 @item --hastablehdu
 Print @code{1} (on standard output) if at least one table HDU (ASCII or binary) exists in the FITS file.
@@ -9330,7 +9330,7 @@ If we hadn't used @option{--primaryimghd
 @end table
 
 
-@node Keyword inspection and manipulation,  , HDU information and manipulation, Invoking astfits
+@node Keyword inspection and manipulation,  , HDU information and manipulation, astfits
 @subsubsection Keyword inspection and manipulation
 The meta-data in each header data unit, or HDU (also known as extension, see @ref{Fits}) is stored as ``keyword''s.
 Each keyword consists of a name, value, unit, and comments.
@@ -9363,7 +9363,7 @@ $ astfits image-a.fits --keyvalue=NAXIS,
 @end example
 
 The output is internally stored (and finally printed) as a table (with one column per keyword).
-Therefore just like the Table program, you can use @option{--colinfoinstdout} to print the metadata like the example below (also see @ref{Invoking asttable}).
+Therefore just like the Table program, you can use @option{--colinfoinstdout} to print the metadata like the example below (also see @ref{asttable}).
 The keyword metadata (comments and units) are extracted from the comments and units of the keyword in the input files (first file that has a comment or unit).
 Hence if the keyword doesn't have units or comments in any of the input files, they will be empty.
 For more on Gnuastro's plain-text metadata format, see @ref{Gnuastro text table format}.
@@ -9824,14 +9824,14 @@ The various types will increase with fut
 The conversion is not only one way (from FITS to other formats), but two ways (except the EPS and PDF formats@footnote{Because EPS and PDF are vector, not raster/pixelated formats}).
 So you can also convert a JPEG image or text file into a FITS image.
 Basically, other than EPS/PDF, you can use any of the recognized formats as different color channel inputs to get any of the recognized outputs.
-So before explaining the options and arguments (in @ref{Invoking astconvertt}), we'll start with a short description of the recognized files types in @ref{Recognized file formats}, followed a short introduction to digital color in @ref{Color}.
+So before explaining the options and arguments (in @ref{astconvertt}), we'll start with a short description of the recognized files types in @ref{Recognized file formats}, followed a short introduction to digital color in @ref{Color}.
 
 @menu
 * Recognized file formats::     Recognized file formats
 * Color::                       Some explanations on color.
 * Aligning images with small WCS offsets::  When the WCS slightly differs.
 * Annotations for figure in paper::  Adding coordinates or physical scale.
-* Invoking astconvertt::        Options and arguments to ConvertType.
+* astconvertt::                 Options and arguments to ConvertType.
 @end menu
 
 @node Recognized file formats, Color, ConvertType, ConvertType
@@ -9945,7 +9945,7 @@ Most programs also support input as plai
 As input, each plain text file is considered to contain one color channel.
 
 In ConvertType, the recognized extensions for plain text files are @file{.txt} and @file{.dat}.
-As described in @ref{Invoking astconvertt}, if you just give these extensions, (and not a full filename) as output, then automatic output will be preformed to determine the final output name (see @ref{Automatic output}).
+As described in @ref{astconvertt}, if you just give these extensions, (and not a full filename) as output, then automatic output will be preformed to determine the final output name (see @ref{Automatic output}).
 Besides these, when the format of a file cannot be recognized from its name, ConvertType will fall back to plain text mode.
 So you can use any name (even without an extension) for a plain text input or output.
 Just note that when the suffix is not recognized, automatic output will not be preformed.
@@ -9990,7 +9990,7 @@ To make measurements in different filter
 Therefore, the FITS format that is used to store astronomical datasets is inherently a mono-channel format (see @ref{Recognized file formats} or @ref{Fits}).
 
 When a subject has been imaged in multiple filters, you can feed each different filter into the red, green and blue channels and obtain a colored visualization.
-In ConvertType, you can do this by giving each separate single-channel dataset (for example in the FITS image format) as an argument (in the proper order), then asking for the output in a format that supports multi-channel datasets (for example JPEG or PDF, see the examples in @ref{Invoking astconvertt}).
+In ConvertType, you can do this by giving each separate single-channel dataset (for example in the FITS image format) as an argument (in the proper order), then asking for the output in a format that supports multi-channel datasets (for example JPEG or PDF, see the examples in @ref{astconvertt}).
 
 @cindex Grayscale
 @cindex Visualization
@@ -10004,7 +10004,7 @@ The most basic is to use shades of black
 This scheme is called grayscale.
 To help in visualization, more complex mappings can be defined.
 For example, the values can be scaled to a range of 0 to 360 and used as the ``Hue'' term of the @url{https://en.wikipedia.org/wiki/HSL_and_HSV, Hue-Saturation-Value} (HSV) color space (while fixing the ``Saturation'' and ``Value'' terms).
-In ConvertType, you can use the @option{--colormap} option to choose between different mappings of mono-channel inputs, see @ref{Invoking astconvertt}.
+In ConvertType, you can use the @option{--colormap} option to choose between different mappings of mono-channel inputs, see @ref{astconvertt}.
 
 Since grayscale is a commonly used mapping of single-valued datasets, we'll continue with a closer look at how it is stored.
 One way to represent a gray-scale image in different color spaces is to use the same proportions of the primary colors in each pixel.
@@ -10094,7 +10094,7 @@ $ ./my-align.sh
 @noindent
 Of course, feel free to hack it and modify it to fit your datasets, like the rest of Gnuastro, this script is released under GNU GPLv.3 and above, see @ref{Your rights}.
 
-@node Annotations for figure in paper, Invoking astconvertt, Aligning images with small WCS offsets, ConvertType
+@node Annotations for figure in paper, astconvertt, Aligning images with small WCS offsets, ConvertType
 @subsection Annotations for figure in paper
 
 @cindex Image annotation
@@ -10503,7 +10503,7 @@ pdflatex -shell-escape -halt-on-error re
 
 
 
-@node Invoking astconvertt,  , Annotations for figure in paper, ConvertType
+@node astconvertt,  , Annotations for figure in paper, ConvertType
 @subsection Invoking ConvertType
 
 ConvertType will convert any recognized input file type to any specified output type.
@@ -10791,18 +10791,18 @@ Table has a large set of operations that
 For operations that Table doesn't do internally, FITS tables (ASCII or binary) are directly accessible to the users of Unix-like operating systems (in particular those working the command-line or shell, see @ref{Command-line interface}).
 With Table, a FITS table (in binary or ASCII formats) is only one command away from AWK (or any other tool you want to use).
 Just like a plain text file that you read with the @command{cat} command.
-You can pipe the output of Table into any other tool for higher-level processing, see the examples in @ref{Invoking asttable} for some simple examples.
+You can pipe the output of Table into any other tool for higher-level processing, see the examples in @ref{asttable} for some simple examples.
 
 In the sections below we describe how to effectively use the Table program.
 We start with @ref{Column arithmetic}, where the basic concept and methods of applying arithmetic operations on one or more columns are discussed.
 Afterwards, in @ref{Operation precedence in Table}, we review the various types of operations available and their precedence in an instance of calling Table.
 This is a good place to get a general feeling of all the things you can do with Table.
-Finally, in @ref{Invoking asttable}, we give some examples and describe each option in Table.
+Finally, in @ref{asttable}, we give some examples and describe each option in Table.
 
 @menu
 * Column arithmetic::           How to do operations on table columns.
 * Operation precedence in Table::  Order of running options in Table.
-* Invoking asttable::           Options and arguments to Table.
+* asttable::                    Options and arguments to Table.
 @end menu
 
 @node Column arithmetic, Operation precedence in Table, Table, Table
@@ -10865,7 +10865,7 @@ Column arithmetic changes the values of
 So the old column meta data can't be used any more.
 By default the output column of the arithmetic operation will be given a generic metadata (for example its name will be @code{ARITH_1}, which is hardly useful!).
 But meta data are critically important and it is good practice to always have short, but descriptive, names for each columns, units and also some comments for more explanation.
-To add metadata to a column, you can use the @option{--colmetadata} option that is described in @ref{Invoking asttable} and @ref{Operation precedence in Table}.
+To add metadata to a column, you can use the @option{--colmetadata} option that is described in @ref{asttable} and @ref{Operation precedence in Table}.
 
 Finally, since the arithmetic expressions are a value to @option{--column}, it doesn't necessarily have to be a separate option, so the commands above are also identical to the command below (note that this only has one @option{-c} option).
 Just be very careful with the quoting!
@@ -11001,13 +11001,13 @@ If you don't need to see the Unix-second
 For more on @option{--keyvalue}, see @ref{Keyword inspection and manipulation}.
 @end table
 
-@node Operation precedence in Table, Invoking asttable, Column arithmetic, Table
+@node Operation precedence in Table, asttable, Column arithmetic, Table
 @subsection Operation precedence in Table
 
 The Table program can do many operations on the rows and columns of the input tables and they aren't always applied in the order you call the operation on the command-line.
 In this section we will describe which operation is done before/after which operation.
 Knowing this precedence table is important to avoid confusion when you ask for more than one operation.
-For a description of each option, please see @ref{Invoking asttable}.
+For a description of each option, please see @ref{asttable}.
 
 @table @asis
 @item Column information (@option{--information} or @option{-i})
@@ -11131,7 +11131,7 @@ asttable table.fits -cRA,DEC --noblank=M
 @end example
 @end cartouche
 
-@node Invoking asttable,  , Operation precedence in Table, Table
+@node asttable,  , Operation precedence in Table, Table
 @subsection Invoking Table
 
 Table will read/write, select, modify, or show the information of the rows and columns in recognized Table formats (including FITS binary, FITS ASCII, and plain text table files, see @ref{Tables}).
@@ -11333,7 +11333,7 @@ The chosen column doesn't have to be in
 This is good when you just want to select using one column's values, but don't need that column anymore afterwards.
 
 For one example of using this option, see the example under
-@option{--sigclip-median} in @ref{Invoking aststatistics}.
+@option{--sigclip-median} in @ref{aststatistics}.
 
 @item --inpolygon=STR1,STR2
 Only return rows where the given coordinates are inside the polygon specified by the @option{--polygon} option.
@@ -11570,10 +11570,10 @@ We will try to add high-level interfaces
 
 @menu
 * Available databases::         List of available databases to Query.
-* Invoking astquery::           Inputs, outputs and configuration of Query.
+* astquery::                    Inputs, outputs and configuration of Query.
 @end menu
 
-@node Available databases, Invoking astquery, Query, Query
+@node Available databases, astquery, Query, Query
 @subsection Available databases
 
 The current list of databases supported by Query are listed at the end of this section.
@@ -11794,7 +11794,7 @@ For details on each dataset with necessa
 
 
 
-@node Invoking astquery,  , Available databases, Query
+@node astquery,  , Available databases, Query
 @subsection Invoking Query
 
 Query provides a high-level interface to downloading subsets of data from databases.
@@ -11896,7 +11896,7 @@ When @option{--dataset} is specified, th
 Some databases (like VizieR) contain tens of thousands of datasets, so you can limit the downloaded and printed information for available databases with the @option{--limitinfo} option (described below).
 Dataset descriptions are often large and contain a lot of text (unlike column descriptions).
 Therefore when printing the information of all datasets within a database, the information (e.g., database name) will be printed on separate lines before the description.
-However, when printing column information, the output has the same format as a similar option in Table (see @ref{Invoking asttable}).
+However, when printing column information, the output has the same format as a similar option in Table (see @ref{asttable}).
 
 Important note to consider: the printed order of the datasets or columns is just for displaying in the printed output.
 You cannot ask for datasets or columns based on the printed order, you need to use dataset or column names.
@@ -12064,14 +12064,14 @@ So when you simply crop the image of suc
 Therefore in its WCS mode, Crop will stitch parts of the tiles that are relevant for a target (with the given width) from all the input images that cover that region into the output.
 Of course, the tiles have to be present in the list of input files.
 
-Besides cropping postage stamps around certain coordinates, Crop can also crop arbitrary polygons from an image (or a set of tiles by stitching the relevant parts of different tiles within the polygon), see @option{--polygon} in @ref{Invoking astcrop}.
+Besides cropping postage stamps around certain coordinates, Crop can also crop arbitrary polygons from an image (or a set of tiles by stitching the relevant parts of different tiles within the polygon), see @option{--polygon} in @ref{astcrop}.
 Alternatively, it can crop out rectangular regions through the @option{--section} option from one image, see @ref{Crop section syntax}.
 
 @menu
 * Crop modes::                  Basic modes to define crop region.
 * Crop section syntax::         How to define a section to crop.
 * Blank pixels::                Pixels with no value.
-* Invoking astcrop::            Calling Crop on the command-line
+* astcrop::                     Calling Crop on the command-line
 @end menu
 
 @node Crop modes, Crop section syntax, Crop, Crop
@@ -12093,13 +12093,13 @@ Irrespective of how the crop region is d
 All coordinates are read as floating point numbers (not integers, except for the @option{--section} option, see below).
 By setting the @emph{mode} in Crop, you define the standard that the given coordinates must be interpreted.
 Here, the different ways to specify the crop region are discussed within each standard.
-For the full list options, please see @ref{Invoking astcrop}.
+For the full list options, please see @ref{astcrop}.
 
 When the crop is defined by its center, the respective (integer) central pixel position will be found internally according to the FITS standard.
 To have this pixel positioned in the center of the cropped region, the final cropped region will have an add number of pixels (even if you give an even number to @option{--width} in image mode).
 
 Furthermore, when the crop is defined as by its center, Crop allows you to only keep crops what don't have any blank pixels in the vicinity of their center (your primary target).
-This can be very convenient when your input catalog/coordinates originated from another survey/filter which is not fully covered by your input image, to learn more about this feature, please see the description of the @option{--checkcenter} option in @ref{Invoking astcrop}.
+This can be very convenient when your input catalog/coordinates originated from another survey/filter which is not fully covered by your input image, to learn more about this feature, please see the description of the @option{--checkcenter} option in @ref{astcrop}.
 
 @table @asis
 @item Image coordinates
@@ -12126,7 +12126,7 @@ The former is lower-level (doesn't accep
 Please see @ref{Crop section syntax} for a full description of this method.
 
 The latter option (@option{--polygon}) is a higher-level method to define any polygon (with any number of vertices) with floating point values.
-Please see the description of this option in @ref{Invoking astcrop} for its syntax.
+Please see the description of this option in @ref{astcrop} for its syntax.
 @end table
 
 @item WCS coordinates
@@ -12156,7 +12156,7 @@ If it exists in the input images, it wil
 
 @item Vertices of a single crop
 The @option{--polygon} option is a high-level method to define any convex polygon (with any number of vertices).
-Please see the description of this option in @ref{Invoking astcrop} for its syntax.
+Please see the description of this option in @ref{astcrop} for its syntax.
 @end table
 
 @cartouche
@@ -12210,7 +12210,7 @@ If you forget the quotes, anything after
 See @ref{Command-line} for a description of how the command-line works.
 
 
-@node Blank pixels, Invoking astcrop, Crop section syntax, Crop
+@node Blank pixels, astcrop, Crop section syntax, Crop
 @subsection Blank pixels
 
 @cindex Blank pixel
@@ -12235,7 +12235,7 @@ So by default, when dealing with float o
 This can be turned off with the @option{--zeroisnotblank} option.
 
 
-@node Invoking astcrop,  , Blank pixels, Crop
+@node astcrop,  , Blank pixels, Crop
 @subsection Invoking Crop
 
 Crop will crop a region from an image.
@@ -12300,7 +12300,7 @@ This has no effect on each output, see @
 * Crop known issues::           Known issues in running Crop.
 @end menu
 
-@node Crop options, Crop output, Invoking astcrop, Invoking astcrop
+@node Crop options, Crop output, astcrop, astcrop
 @subsubsection Crop options
 
 The options can be classified into the following contexts: Input, Output and operating mode options.
@@ -12556,7 +12556,7 @@ The value must either be @option{img} or
 
 
 
-@node Crop output, Crop known issues, Crop options, Invoking astcrop
+@node Crop output, Crop known issues, Crop options, astcrop
 @subsubsection Crop output
 
 The string given to @option{--output} option will be interpreted depending
@@ -12598,10 +12598,10 @@ The cropped image file name for that row
 The number of input images that were used to create that image.
 @item
 A @code{0} if the central few pixels (value to the @option{--checkcenter} option) are blank and @code{1} if they aren't.
-When the crop was not defined by its center (see @ref{Crop modes}), or @option{--checkcenter} was given a value of 0 (see @ref{Invoking astcrop}), the center will not be checked and this column will be given a value of @code{-1}.
+When the crop was not defined by its center (see @ref{Crop modes}), or @option{--checkcenter} was given a value of 0 (see @ref{astcrop}), the center will not be checked and this column will be given a value of @code{-1}.
 @end enumerate
 
-@node Crop known issues,  , Crop output, Invoking astcrop
+@node Crop known issues,  , Crop output, astcrop
 @subsubsection Crop known issues
 
 When running Crop, you may encounter strange errors and bugs.
@@ -12651,13 +12651,13 @@ For example, in the reduction of raw dat
 Later (once the images as warped into a single grid using Warp for example, see @ref{Warp}), the images are co-added (the output pixel grid is the average of the pixels of the individual input images).
 Arithmetic is Gnuastro's program for such operations on your datasets directly from the command-line.
 It currently uses the reverse polish or post-fix notation, see @ref{Reverse polish notation} and will work on the native data types of the input images/data to reduce CPU and RAM resources, see @ref{Numeric data types}.
-For more information on how to run Arithmetic, please see @ref{Invoking astarithmetic}.
+For more information on how to run Arithmetic, please see @ref{astarithmetic}.
 
 
 @menu
 * Reverse polish notation::     The current notation style for Arithmetic
 * Arithmetic operators::        List of operators known to Arithmetic
-* Invoking astarithmetic::      How to run Arithmetic: options and output
+* astarithmetic::               How to run Arithmetic: options and output
 @end menu
 
 @node Reverse polish notation, Arithmetic operators, Arithmetic, Arithmetic
@@ -12735,7 +12735,7 @@ There are no more operands or operators,
 In the kitchen metaphor, you see that your recipe has no more steps, so you just pick up the remaining dish and take it to the dining room to enjoy a good dinner.
 @end enumerate
 
-In the Arithmetic program, the operands can be FITS images of any dimensionality, or numbers (see @ref{Invoking astarithmetic}).
+In the Arithmetic program, the operands can be FITS images of any dimensionality, or numbers (see @ref{astarithmetic}).
 In Table's column arithmetic, they can be any column in the table (a series of numbers in an array) or a single number (see @ref{Column arithmetic}).
 
 With this notation, very complicated procedures can be created without the need for parenthesis or worrying about precedence.
@@ -12746,7 +12746,7 @@ This is a very powerful notation and is
 
 
 
-@node Arithmetic operators, Invoking astarithmetic, Reverse polish notation, Arithmetic
+@node Arithmetic operators, astarithmetic, Reverse polish notation, Arithmetic
 @subsection Arithmetic operators
 
 In this section, list of recognized operators in Arithmetic (and the Table program's @ref{Column arithmetic}) and discussed in detail with examples.
@@ -14110,7 +14110,7 @@ Similar to the @code{tofile} operator, w
 @end table
 
 
-@node Invoking astarithmetic,  , Arithmetic operators, Arithmetic
+@node astarithmetic,  , Arithmetic operators, Arithmetic
 @subsection Invoking Arithmetic
 
 Arithmetic will do pixel to pixel arithmetic operations on the individual pixels of input data and/or numbers.
@@ -14311,7 +14311,7 @@ $ echo "" | awk '@{print (10.32-3.84)^2.
 @cindex Average, weighted
 @cindex Kernel, convolution
 On an image, convolution can be thought of as a process to blur or remove the contrast in an image.
-If you are already familiar with the concept and just want to run Convolve, you can jump to @ref{Convolution kernel} and @ref{Invoking astconvolve} and skip the lengthy introduction on the basic definitions and concepts of convolution.
+If you are already familiar with the concept and just want to run Convolve, you can jump to @ref{Convolution kernel} and @ref{astconvolve} and skip the lengthy introduction on the basic definitions and concepts of convolution.
 
 There are generally two methods to convolve an image.
 The first and more intuitive one is in the ``spatial domain'' or using the actual image pixel values, see @ref{Spatial domain convolution}.
@@ -14342,7 +14342,7 @@ However this text is written for an unde
 * Frequency domain and Fourier operations::  Using frequencies in input.
 * Spatial vs. Frequency domain::  When to use which?
 * Convolution kernel::          How to specify the convolution kernel.
-* Invoking astconvolve::        Options and argument to Convolve.
+* astconvolve::                 Options and argument to Convolve.
 @end menu
 
 @node Spatial domain convolution, Frequency domain and Fourier operations, Convolve, Convolve
@@ -15086,7 +15086,7 @@ The reason is that if you apply a freque
 But when you have made the profiles in the image yourself, you can just make a larger input image and crop the central parts to completely remove the edge effect, see @ref{If convolving afterwards}.
 Also due to oversampling, both the kernels and the images can become very large and the speed boost of frequency domain convolution will significantly improve the processing time, see @ref{Oversampling}.
 
-@node Convolution kernel, Invoking astconvolve, Spatial vs. Frequency domain, Convolve
+@node Convolution kernel, astconvolve, Spatial vs. Frequency domain, Convolve
 @subsection Convolution kernel
 
 All the programs that need convolution will need to be given a convolution kernel file and extension.
@@ -15104,7 +15104,7 @@ By default MakeProfiles will make the Ga
 ConvertType: You can write your own desired kernel into a text file table and convert it to a FITS file with ConvertType, see @ref{ConvertType}.
 Just be careful that the kernel has to have an odd number of pixels along its two axes, see @ref{Convolution process}.
 All the programs that do convolution will normalize the kernel internally, so if you choose this option, you don't have to worry about normalizing the kernel.
-Only within Convolve, there is an option to disable normalization, see @ref{Invoking astconvolve}.
+Only within Convolve, there is an option to disable normalization, see @ref{astconvolve}.
 
 @end itemize
 
@@ -15144,7 +15144,7 @@ By default, the system configuration fil
 @end table
 
 
-@node Invoking astconvolve,  , Convolution kernel, Convolve
+@node astconvolve,  , Convolution kernel, Convolve
 @subsection Invoking Convolve
 
 Convolve an input dataset (2D image or 1D spectrum for example) with a known kernel, or make the kernel necessary to match two PSFs.
@@ -15354,7 +15354,7 @@ It is therefore necessary to warp the im
 * Warping basics::              Basics of coordinate transformation.
 * Merging multiple warpings::   How to merge multiple matrices.
 * Resampling::                  Warping an image is re-sampling it.
-* Invoking astwarp::            Arguments and options for Warp.
+* astwarp::                     Arguments and options for Warp.
 @end menu
 
 @node Warping basics, Merging multiple warpings, Warp, Warp
@@ -15497,7 +15497,7 @@ These three operations can be merged in
 
 
 
-@node Resampling, Invoking astwarp, Merging multiple warpings, Warp
+@node Resampling, astwarp, Merging multiple warpings, Warp
 @subsection Resampling
 
 @cindex Pixel
@@ -15559,7 +15559,7 @@ So if the input image has fringes, they
 Because of the PSF no astronomical target has a sharpchange in the signal so this issue is less important for astronomical applications, see @ref{PSF}.
 
 
-@node Invoking astwarp,  , Resampling, Warp
+@node astwarp,  , Resampling, Warp
 @subsection Invoking Warp
 
 Warp an input dataset into a new grid.
@@ -15699,10 +15699,10 @@ This option is applied after the final w
 See the explanation above for coordinates in the FITS standard to better understand this option and when it should be used.
 
 @item --hstartwcs=INT
-Specify the first header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{Invoking astcrop}.
+Specify the first header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{astcrop}.
 
 @item --hendwcs=INT
-Specify the last header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{Invoking astcrop}.
+Specify the last header keyword number (line) that should be used to read the WCS information, see the full explanation in @ref{astcrop}.
 
 @item -k
 @itemx --keepwcs
@@ -15772,7 +15772,7 @@ The Statistics program is designed for s
 * 2D Histograms::               Plotting the distribution of two variables.
 * Sigma clipping::              Definition of @mymath{\sigma}-clipping.
 * Sky value::                   Definition and derivation of the Sky value.
-* Invoking aststatistics::      Arguments and options to Statistics.
+* aststatistics::               Arguments and options to Statistics.
 @end menu
 
 
@@ -15786,7 +15786,7 @@ So on the horizontal axis we have the bi
 You can use it to get a general view of the distribution: which values have been repeated the most? how close/far are the most significant bins?  Are there more values in the larger part of the range of the dataset, or in the lower part?  Similarly, many very important properties about the dataset can be deduced from a visual inspection of the histogram.
 In the Statistics program, the histogram can be either output to a table to plot with your favorite plotting program@footnote{
 We recommend @url{http://pgfplots.sourceforge.net/,PGFPlots} which generates your plots directly within @TeX{} (the same tool that generates your document).},
-or it can be shown with ASCII characters on the command-line, which is very crude, but good enough for a fast and on-the-go analysis, see the example in @ref{Invoking aststatistics}.
+or it can be shown with ASCII characters on the command-line, which is very crude, but good enough for a fast and on-the-go analysis, see the example in @ref{aststatistics}.
 
 @cindex Intervals, histogram
 @cindex Bin width, histogram
@@ -15807,7 +15807,7 @@ Normalizing a cumulative frequency plot
 Unlike the histogram which has a limited number of bins, ideally the cumulative frequency plot should have one point for every data element.
 Even in small datasets (for example a @mymath{200\times200} image) this will result in an unreasonably large number of points to plot (40000)! As a result, for practical reasons, it is common to only store its value on a certain number of points (intervals) in the input range rather than the whole dataset, so you should determine the number of bins you want when asking for a cumulative frequency plot.
 In Gnuastro (and thus the Statistics program), the number reported for each bin is the total number of data points until the larger interval value for that bin.
-You can see an example histogram and cumulative frequency plot of a single dataset under the @option{--asciihist} and @option{--asciicfp} options of @ref{Invoking aststatistics}.
+You can see an example histogram and cumulative frequency plot of a single dataset under the @option{--asciihist} and @option{--asciicfp} options of @ref{aststatistics}.
 
 So as a summary, both the histogram and cumulative frequency plot in Statistics will work with bins.
 Within each bin/interval, the lower value is considered to be within then bin (it is inclusive), but its larger value is not (it is exclusive).
@@ -16117,7 +16117,7 @@ The ASCII histogram that is printed on t
 
 
 
-@node Sky value, Invoking aststatistics, Sigma clipping, Statistics
+@node Sky value, aststatistics, Sigma clipping, Statistics
 @subsection Sky value
 
 @cindex Sky
@@ -16374,7 +16374,7 @@ The same goes for the @option{--checksky
 
 
 
-@node Invoking aststatistics,  , Sky value, Statistics
+@node aststatistics,  , Sky value, Statistics
 @subsection Invoking Statistics
 
 Statistics will print statistical measures of an input dataset (table column or image).
@@ -17007,7 +17007,7 @@ You can then directly feed NoiseChisel's
 Thanks to the published papers mentioned above, there is no need to provide a more complete introduction to NoiseChisel in this book.
 However, published papers cannot be updated any more, but the software has evolved/changed.
 The changes since publication are documented in @ref{NoiseChisel changes after publication}.
-In @ref{Invoking astnoisechisel}, the details of running NoiseChisel and its options are discussed.
+In @ref{astnoisechisel}, the details of running NoiseChisel and its options are discussed.
 
 As discussed above, detection is one of the most important steps for your scientific result.
 It is therefore very important to obtain a good understanding of NoiseChisel (and afterwards @ref{Segment} and @ref{MakeCatalog}).
@@ -17019,17 +17019,17 @@ In the meantime, they also show the modu
 Defining colors is a very common process in most science-cases.
 Therefore it is also recommended to (patiently) complete that tutorial for optimal usage of NoiseChisel in conjunction with all the other Gnuastro programs.
 @ref{Detecting large extended targets} shows you can optimize NoiseChisel's settings for very extended objects to successfully carve out to signal-to-noise ratio levels of below 1/10.
-After going through those tutorials, play a little with the settings (in the order presented in the paper and @ref{Invoking astnoisechisel}) on a dataset you are familiar with and inspect all the check images (options starting with @option{--check}) to see the effect of each parameter.
+After going through those tutorials, play a little with the settings (in the order presented in the paper and @ref{astnoisechisel}) on a dataset you are familiar with and inspect all the check images (options starting with @option{--check}) to see the effect of each parameter.
 
-Below, in @ref{Invoking astnoisechisel}, we will review NoiseChisel's input, detection, and output options in @ref{NoiseChisel input}, @ref{Detection options}, and @ref{NoiseChisel output}.
+Below, in @ref{astnoisechisel}, we will review NoiseChisel's input, detection, and output options in @ref{NoiseChisel input}, @ref{Detection options}, and @ref{NoiseChisel output}.
 If you have used NoiseChisel within your research, please run it with @option{--cite} to list the papers you should cite and how to acknowledge its funding sources.
 
 @menu
 * NoiseChisel changes after publication::  Updates since published papers.
-* Invoking astnoisechisel::     Options and arguments for NoiseChisel.
+* astnoisechisel::              Options and arguments for NoiseChisel.
 @end menu
 
-@node NoiseChisel changes after publication, Invoking astnoisechisel, NoiseChisel, NoiseChisel
+@node NoiseChisel changes after publication, astnoisechisel, NoiseChisel, NoiseChisel
 @subsection NoiseChisel changes after publication
 
 NoiseChisel was initially introduced in @url{https://arxiv.org/abs/1505.01664, Akhlaghi and Ichikawa [2015]} and updates after the first four years were published in @url{https://arxiv.org/abs/1909.11230, Akhlaghi [2019]}.
@@ -17057,7 +17057,7 @@ In our tests, this gave a much improved
 
 
 
-@node Invoking astnoisechisel,  , NoiseChisel changes after publication, NoiseChisel
+@node astnoisechisel,  , NoiseChisel changes after publication, NoiseChisel
 @subsection Invoking NoiseChisel
 
 NoiseChisel will detect signal in noise producing a multi-extension dataset containing a binary detection map which is the same size as the input.
@@ -17184,7 +17184,7 @@ Finally, in @ref{NoiseChisel output} the
 * NoiseChisel output::          NoiseChisel's output options and format.
 @end menu
 
-@node NoiseChisel input, Detection options, Invoking astnoisechisel, Invoking astnoisechisel
+@node NoiseChisel input, Detection options, astnoisechisel, astnoisechisel
 @subsubsection NoiseChisel input
 
 The options here can be used to configure the inputs and output of NoiseChisel, along with some general processing options.
@@ -17288,7 +17288,7 @@ Except for the tile size, all the other
 The format is identical to that of the @option{--tilesize} option that is discussed in that section.
 @end table
 
-@node Detection options, NoiseChisel output, NoiseChisel input, Invoking astnoisechisel
+@node Detection options, NoiseChisel output, NoiseChisel input, astnoisechisel
 @subsubsection Detection options
 
 Detection is the process of separating the pixels in the image into two groups: 1) Signal, and 2) Noise.
@@ -17566,7 +17566,7 @@ By default the output will have the same
 
 
 
-@node NoiseChisel output,  , Detection options, Invoking astnoisechisel
+@node NoiseChisel output,  , Detection options, astnoisechisel
 @subsubsection NoiseChisel output
 
 NoiseChisel's output is a multi-extension FITS file.
@@ -17737,14 +17737,14 @@ Those papers cannot be updated any more
 For example Segment became a separate program (from NoiseChisel) in 2018 (after those papers were published).
 Therefore this book is the definitive reference.
 @c To help in the transition from those papers to the software you are using, see @ref{Segment changes after publication}.
-Finally, in @ref{Invoking astsegment}, we'll discuss Segment's inputs, outputs and configuration options.
+Finally, in @ref{astsegment}, we'll discuss Segment's inputs, outputs and configuration options.
 
 
 @menu
-* Invoking astsegment::         Inputs, outputs and options to Segment
+* astsegment::                  Inputs, outputs and options to Segment
 @end menu
 
-@c @node Segment changes after publication, Invoking astsegment, Segment, Segment
+@c @node Segment changes after publication, astsegment, Segment, Segment
 @c @subsection Segment changes after publication
 
 @c Segment's main algorithm and working strategy were initially defined and introduced in Section 3.2 of @url{https://arxiv.org/abs/1505.01664, Akhlaghi and Ichikawa [2015]} and @url{https://arxiv.org/abs/1909.11230, Akhlaghi [2019]}.
@@ -17756,7 +17756,7 @@ Finally, in @ref{Invoking astsegment}, w
 @c The aim of this section is to make the transition from the paper to your installed version, as smooth as possible through the list below.
 @c For a more detailed list of changes in previous Gnuastro releases/versions, please follow the @file{NEWS} file@footnote{The @file{NEWS} file is present in the released Gnuastro tarball, see @ref{Release tarball}.}.
 
-@node Invoking astsegment,  , Segment, Segment
+@node astsegment,  , Segment, Segment
 @subsection Invoking Segment
 
 Segment will identify substructure within the detected regions of an input image.
@@ -17809,7 +17809,7 @@ Finally, in @ref{Segment output}, we'll
 * Segment output::              Outputs of Segment
 @end menu
 
-@node Segment input, Segmentation options, Invoking astsegment, Invoking astsegment
+@node Segment input, Segmentation options, astsegment, astsegment
 @subsubsection Segment input
 
 Besides the input dataset (for example astronomical image), Segment also needs to know the Sky standard deviation and the regions of the dataset that it should segment.
@@ -17951,7 +17951,7 @@ It is important for them to be much larg
 @end table
 
 
-@node Segmentation options, Segment output, Segment input, Invoking astsegment
+@node Segmentation options, Segment output, Segment input, astsegment
 @subsubsection Segmentation options
 
 The options below can be used to configure every step of the segmentation process in the Segment program.
@@ -18065,7 +18065,7 @@ This behavior can be disabled with @opti
 
 @end table
 
-@node Segment output,  , Segmentation options, Invoking astsegment
+@node Segment output,  , Segmentation options, astsegment
 @subsubsection Segment output
 
 The main output of Segment are two label datasets (with integer types, separating the dataset's elements into different classes).
@@ -18213,7 +18213,7 @@ Similarly, the sum of all these pixels w
 Pixels with labels equal to, or smaller than, zero will be ignored by MakeCatalog.
 In other words, the number of rows in MakeCatalog's output is already known before running it (the maximum value of the labeled dataset).
 
-Before getting into the details of running MakeCatalog (in @ref{Invoking astmkcatalog}, we'll start with a discussion on the basics of its approach to separating detection from measurements in @ref{Detection and catalog production}.
+Before getting into the details of running MakeCatalog (in @ref{astmkcatalog}, we'll start with a discussion on the basics of its approach to separating detection from measurements in @ref{Detection and catalog production}.
 A very important factor in any measurement is understanding its validity range, or limits.
 Therefore in @ref{Quantifying measurement limits}, we'll discuss how to estimate the reliability of the detection and basic measurements.
 This section will continue with a derivation of elliptical parameters from the labeled datasets in @ref{Measuring elliptical parameters}.
@@ -18225,7 +18225,7 @@ For those who feel MakeCatalog's existin
 * Quantifying measurement limits::  For comparing different catalogs.
 * Measuring elliptical parameters::  Estimating elliptical parameters.
 * Adding new columns to MakeCatalog::  How to add new columns.
-* Invoking astmkcatalog::       Options and arguments to MakeCatalog.
+* astmkcatalog::                Options and arguments to MakeCatalog.
 @end menu
 
 @node Detection and catalog production, Brightness flux magnitude, MakeCatalog, MakeCatalog
@@ -18770,7 +18770,7 @@ When the object cannot be represented as
 
 
 
-@node Adding new columns to MakeCatalog, Invoking astmkcatalog, Measuring elliptical parameters, MakeCatalog
+@node Adding new columns to MakeCatalog, astmkcatalog, Measuring elliptical parameters, MakeCatalog
 @subsection Adding new columns to MakeCatalog
 
 MakeCatalog is designed to allow easy addition of different measurements over a labeled image (see @url{https://arxiv.org/abs/1611.06387v1, Akhlaghi [2016]}).
@@ -18786,7 +18786,7 @@ These two passes are designed to be raw
 This will allow parallel processing and simplicity/clarity.
 So if your new calculation, needs new raw information from the pixels, then you will need to also modify the respective @code{mkcatalog_first_pass} and @code{mkcatalog_second_pass} functions (both in @file{bin/mkcatalog/mkcatalog.c}) and define new raw table columns in @file{main.h} (hopefully the comments in the code are clear enough).
 
-In all these different places, the final columns are sorted in the same order (same order as @ref{Invoking astmkcatalog}).
+In all these different places, the final columns are sorted in the same order (same order as @ref{astmkcatalog}).
 This allows a particular column/option to be easily found in all steps.
 Therefore in adding your new option, be sure to keep it in the same relative place in the list in all the separate places (it doesn't necessarily have to be in the end), and near conceptually similar options.
 
@@ -18838,7 +18838,7 @@ Update this manual and add a description
 
 
 
-@node Invoking astmkcatalog,  , Adding new columns to MakeCatalog, MakeCatalog
+@node astmkcatalog,  , Adding new columns to MakeCatalog, MakeCatalog
 @subsection Invoking MakeCatalog
 
 MakeCatalog will do measurements and produce a catalog from a labeled dataset and optional values dataset(s).
@@ -18892,7 +18892,7 @@ Finally, in @ref{MakeCatalog output} the
 * MakeCatalog output::          File names of MakeCatalog's output table.
 @end menu
 
-@node MakeCatalog inputs and basic settings, Upper-limit settings, Invoking astmkcatalog, Invoking astmkcatalog
+@node MakeCatalog inputs and basic settings, Upper-limit settings, astmkcatalog, astmkcatalog
 @subsubsection MakeCatalog inputs and basic settings
 
 MakeCatalog works by using a localized/labeled dataset (see @ref{MakeCatalog}).
@@ -18946,7 +18946,7 @@ In such cases, you can use Gnuastro's Ar
 @end example
 
 To summarize: if the input file to MakeCatalog is the default/full output of Segment (see @ref{Segment output}) you don't have to worry about any of the @option{--*file} options below.
-You can just give Segment's output file to MakeCatalog as described in @ref{Invoking astmkcatalog}.
+You can just give Segment's output file to MakeCatalog as described in @ref{astmkcatalog}.
 To feed NoiseChisel's output into MakeCatalog, just change the labeled dataset's header (with @option{--hdu=DETECTIONS}).
 The full list of input dataset options and general setting options are described below.
 
@@ -19045,7 +19045,7 @@ But in practice real images my be over-s
 
 
 
-@node Upper-limit settings, MakeCatalog measurements, MakeCatalog inputs and basic settings, Invoking astmkcatalog
+@node Upper-limit settings, MakeCatalog measurements, MakeCatalog inputs and basic settings, astmkcatalog
 @subsubsection Upper-limit settings
 
 The upper-limit magnitude was discussed in @ref{Quantifying measurement limits}.
@@ -19132,7 +19132,7 @@ The total number of rows is thus unknown
 @end table
 
 
-@node MakeCatalog measurements, MakeCatalog output, Upper-limit settings, Invoking astmkcatalog
+@node MakeCatalog measurements, MakeCatalog output, Upper-limit settings, astmkcatalog
 @subsubsection MakeCatalog measurements
 
 The final group of options particular to MakeCatalog are those that specify which measurements/columns should be written into the final output table.
@@ -19689,7 +19689,7 @@ If you use this option, it will have 13
 
 
 
-@node MakeCatalog output,  , MakeCatalog measurements, Invoking astmkcatalog
+@node MakeCatalog output,  , MakeCatalog measurements, astmkcatalog
 @subsubsection MakeCatalog output
 After it has completed all the requested measurements (see @ref{MakeCatalog measurements}), MakeCatalog will store its measurements in table(s).
 If an output filename is given (see @option{--output} in @ref{Input output options}), the format of the table will be deduced from the name.
@@ -19813,10 +19813,10 @@ The nearest objects in the two catalogs,
 The aperture can be a circle or an ellipse with any orientation.
 
 @menu
-* Invoking astmatch::           Inputs, outputs and options of Match
+* astmatch::                    Inputs, outputs and options of Match
 @end menu
 
-@node Invoking astmatch,  , Match, Match
+@node astmatch,  , Match, Match
 @subsection Invoking Match
 
 When given two catalogs, Match finds the rows that are nearest to each other within an input aperture.
@@ -20154,7 +20154,7 @@ After all the transformations are applie
 * Modeling basics::             Astronomical modeling basics.
 * If convolving afterwards::    Considerations for convolving later.
 * Profile magnitude::           Definition of total profile magnitude.
-* Invoking astmkprof::          Inputs and Options for MakeProfiles.
+* astmkprof::                   Inputs and Options for MakeProfiles.
 @end menu
 
 
@@ -20480,7 +20480,7 @@ You also have to shift all the pixel pos
 
 After convolution, you can crop the outer @mymath{n} pixels with the section crop box specification of Crop: @option{--section=n:*-n,n:*-n} assuming your PSF is a square, see @ref{Crop section syntax}.
 This will also remove all discrete Fourier transform artifacts (blurred sides) from the final image.
-To facilitate this shift, MakeProfiles has the options @option{--xshift}, @option{--yshift} and @option{--prepforconv}, see @ref{Invoking astmkprof}.
+To facilitate this shift, MakeProfiles has the options @option{--xshift}, @option{--yshift} and @option{--prepforconv}, see @ref{astmkprof}.
 
 
 
@@ -20491,7 +20491,7 @@ To facilitate this shift, MakeProfiles h
 
 
 
-@node Profile magnitude, Invoking astmkprof, If convolving afterwards, MakeProfiles
+@node Profile magnitude, astmkprof, If convolving afterwards, MakeProfiles
 @subsection Profile magnitude
 
 @cindex Brightness
@@ -20517,7 +20517,7 @@ If not, only the overlapping pixels of t
 
 
 
-@node Invoking astmkprof,  , Profile magnitude, MakeProfiles
+@node astmkprof,  , Profile magnitude, MakeProfiles
 @subsection Invoking MakeProfiles
 
 MakeProfiles will make any number of profiles specified in a catalog either individually or in one image.
@@ -20602,7 +20602,7 @@ Please see @ref{Sufi simulates a detecti
 * MakeProfiles log file::       A description of the optional log file.
 @end menu
 
-@node MakeProfiles catalog, MakeProfiles profile settings, Invoking astmkprof, Invoking astmkprof
+@node MakeProfiles catalog, MakeProfiles profile settings, astmkprof, astmkprof
 @subsubsection MakeProfiles catalog
 The catalog containing information about each profile can be in the FITS ASCII, FITS binary, or plain text formats (see @ref{Tables}).
 The latter can also be provided using standard input (see @ref{Standard input}).
@@ -20730,7 +20730,7 @@ If @option{--tunitinp} is given, this va
 
 @end table
 
-@node MakeProfiles profile settings, MakeProfiles output dataset, MakeProfiles catalog, Invoking astmkprof
+@node MakeProfiles profile settings, MakeProfiles output dataset, MakeProfiles catalog, astmkprof
 @subsubsection MakeProfiles profile settings
 
 The profile parameters that differ between each created profile are specified through the columns in the input catalog and described in @ref{MakeProfiles catalog}.
@@ -20897,7 +20897,7 @@ Because the maximum operator is independ
 
 @end table
 
-@node MakeProfiles output dataset, MakeProfiles log file, MakeProfiles profile settings, Invoking astmkprof
+@node MakeProfiles output dataset, MakeProfiles log file, MakeProfiles profile settings, astmkprof
 @subsubsection MakeProfiles output dataset
 MakeProfiles takes an input catalog uses basic properties that are defined there to build a dataset, for example a 2D image containing the profiles in the catalog.
 In @ref{MakeProfiles catalog} and @ref{MakeProfiles profile settings}, the catalog and profile settings were discussed.
@@ -21068,7 +21068,7 @@ MakeProfiles won't complain if you use n
 
 @end table
 
-@node MakeProfiles log file,  , MakeProfiles output dataset, Invoking astmkprof
+@node MakeProfiles log file,  , MakeProfiles output dataset, astmkprof
 @subsubsection MakeProfiles log file
 
 Besides the final merged dataset of all the profiles, or the individual datasets (see @ref{MakeProfiles output dataset}), if the @option{--log} option is called MakeProfiles will also create a log file in the current directory (where you run MockProfiles).
@@ -21111,16 +21111,16 @@ If an individual image was created, this
 @cindex Noise
 Real data are always buried in noise, therefore to finalize a simulation of real data (for example to test our observational algorithms) it is essential to add noise to the mock profiles created with MakeProfiles, see @ref{MakeProfiles}.
 Below, the general principles and concepts to help understand how noise is quantified is discussed.
-MakeNoise options and argument are then discussed in @ref{Invoking astmknoise}.
+MakeNoise options and argument are then discussed in @ref{astmknoise}.
 
 @menu
 * Noise basics::                Noise concepts and definitions.
-* Invoking astmknoise::         Options and arguments to MakeNoise.
+* astmknoise::                  Options and arguments to MakeNoise.
 @end menu
 
 
 
-@node Noise basics, Invoking astmknoise, MakeNoise, MakeNoise
+@node Noise basics, astmknoise, MakeNoise, MakeNoise
 @subsection Noise basics
 
 @cindex Noise
@@ -21317,7 +21317,7 @@ In the example above, did you notice how
 However, if @option{--envseed} was given, both printed seeds would be the same.
 
 
-@node Invoking astmknoise,  , Noise basics, MakeNoise
+@node astmknoise,  , Noise basics, MakeNoise
 @subsection Invoking MakeNoise
 
 MakeNoise will add noise to an existing image.
@@ -21434,7 +21434,7 @@ Even higher-level analysis is still need
 
 To derive higher-level information regarding our sources in extra-galactic astronomy, cosmological calculations are necessary.
 In Gnuastro, CosmicCalculator is in charge of such calculations.
-Before discussing how CosmicCalculator is called and operates (in @ref{Invoking astcosmiccal}), it is important to provide a rough but mostly self sufficient review of the basics and the equations used in the analysis.
+Before discussing how CosmicCalculator is called and operates (in @ref{astcosmiccal}), it is important to provide a rough but mostly self sufficient review of the basics and the equations used in the analysis.
 In @ref{Distance on a 2D curved space} the basic idea of understanding distances in a curved and expanding 2D universe (which we can visualize) are reviewed.
 Having solidified the concepts there, in @ref{Extending distance concepts to 3D}, the formalism is extended to the 3D universe we are trying to study in our research.
 
@@ -21444,7 +21444,7 @@ There are many books thoroughly deriving
 @menu
 * Distance on a 2D curved space::  Distances in 2D for simplicity
 * Extending distance concepts to 3D::  Going to 3D (our real universe).
-* Invoking astcosmiccal::       How to run CosmicCalculator
+* astcosmiccal::                How to run CosmicCalculator
 @end menu
 
 @node Distance on a 2D curved space, Extending distance concepts to 3D, CosmicCalculator, CosmicCalculator
@@ -21592,7 +21592,7 @@ We can thus parameterize the change in d
 @dispmath{ds^2=c^2dt^2-a^2(t)ds_s^2 = c^2dt^2-a^2(t)(d\chi^2+r^2d\phi^2).}
 
 
-@node Extending distance concepts to 3D, Invoking astcosmiccal, Distance on a 2D curved space, CosmicCalculator
+@node Extending distance concepts to 3D, astcosmiccal, Distance on a 2D curved space, CosmicCalculator
 @subsection Extending distance concepts to 3D
 
 The concepts of @ref{Distance on a 2D curved space} are here extended to a 3D space that @emph{might} be curved.
@@ -21641,7 +21641,7 @@ In a non-static universe (with a scale f
 
 
 
-@node Invoking astcosmiccal,  , Extending distance concepts to 3D, CosmicCalculator
+@node astcosmiccal,  , Extending distance concepts to 3D, CosmicCalculator
 @subsection Invoking CosmicCalculator
 
 CosmicCalculator will calculate cosmological variables based on the input parameters.
@@ -21699,7 +21699,7 @@ CosmicCalculator also has features to he
 * CosmicCalculator spectral line calculations::  How they get affected by redshift.
 @end menu
 
-@node CosmicCalculator input options, CosmicCalculator basic cosmology calculations, Invoking astcosmiccal, Invoking astcosmiccal
+@node CosmicCalculator input options, CosmicCalculator basic cosmology calculations, astcosmiccal, astcosmiccal
 @subsubsection CosmicCalculator input options
 
 The inputs to CosmicCalculator can be specified with the following options:
@@ -21917,9 +21917,9 @@ You can get this list on the command-lin
 
 
 
-@node CosmicCalculator basic cosmology calculations, CosmicCalculator spectral line calculations, CosmicCalculator input options, Invoking astcosmiccal
+@node CosmicCalculator basic cosmology calculations, CosmicCalculator spectral line calculations, CosmicCalculator input options, astcosmiccal
 @subsubsection CosmicCalculator basic cosmology calculations
-By default, when no specific calculations are requested, CosmicCalculator will print a complete set of all its calculators (one line for each calculation, see @ref{Invoking astcosmiccal}).
+By default, when no specific calculations are requested, CosmicCalculator will print a complete set of all its calculators (one line for each calculation, see @ref{astcosmiccal}).
 The full list of calculations can be useful when you don't want any specific value, but just a general view.
 In other contexts (for example in a batch script or during a discussion), you know exactly what you want and don't want to be distracted by all the extra information.
 
@@ -22034,7 +22034,7 @@ The comoving volume in Megaparsecs cube
 
 
 
-@node CosmicCalculator spectral line calculations,  , CosmicCalculator basic cosmology calculations, Invoking astcosmiccal
+@node CosmicCalculator spectral line calculations,  , CosmicCalculator basic cosmology calculations, astcosmiccal
 @subsubsection CosmicCalculator spectral line calculations
 
 @cindex Rest frame wavelength
@@ -22223,10 +22223,10 @@ But we'll leave the implementation of th
 @end itemize
 
 @menu
-* Invoking astscript-sort-by-night::  Inputs and outputs to this script.
+* astscript-sort-by-night::             Inputs and outputs to this script.
 @end menu
 
-@node Invoking astscript-sort-by-night,  , Sort FITS files by night, Sort FITS files by night
+@node astscript-sort-by-night,  , Sort FITS files by night, Sort FITS files by night
 @subsection Invoking astscript-sort-by-night
 
 This installed script will read a FITS date formatted value from the given keyword, and classify the input FITS files into individual nights.
@@ -22378,10 +22378,10 @@ Gnuastro's @file{astscript-radial-profil
 This script uses @ref{MakeProfiles} to generate elliptical apertures with the values equal to the distance from the center of the object and @ref{MakeCatalog} for measuring the values over the apertures.
 
 @menu
-* Invoking astscript-radial-profile::  How to call astscript-radial-profile
+* astscript-radial-profile::    How to call astscript-radial-profile
 @end menu
 
-@node Invoking astscript-radial-profile,  , Generate radial profile, Generate radial profile
+@node astscript-radial-profile,  , Generate radial profile, Generate radial profile
 @subsection Invoking astscript-radial-profile
 
 This installed script will measure the radial profile of an object within an image.
@@ -22624,10 +22624,10 @@ In this section we describe a simple ins
 SAO DS9@footnote{@url{http://ds9.si.edu}} is one of the most common FITS image visualization tools in astronomy and is free software.
 
 @menu
-* Invoking astscript-ds9-region::  How to call astscript-ds9-region
+* astscript-ds9-region::        How to call astscript-ds9-region
 @end menu
 
-@node Invoking astscript-ds9-region,  , SAO DS9 region files from table, SAO DS9 region files from table
+@node astscript-ds9-region,  , SAO DS9 region files from table, SAO DS9 region files from table
 @subsection Invoking astscript-ds9-region
 
 This installed script will read two positional columns within an input table and generate an SAO DS9 region file to visualize the position of the given objects over an image.
@@ -23196,10 +23196,10 @@ Please see @ref{Optional dependencies} f
 @end cartouche
 
 @menu
-* Invoking astbuildprog::       Options and examples for using this program.
+* astbuildprog::                Options and examples for using this program.
 @end menu
 
-@node Invoking astbuildprog,  , BuildProgram, BuildProgram
+@node astbuildprog,  , BuildProgram, BuildProgram
 @subsection Invoking BuildProgram
 
 BuildProgram will compile and link a C source program with Gnuastro's library and all its dependencies, greatly facilitating the compilation and running of small programs that use Gnuastro's library.
@@ -32094,7 +32094,7 @@ philosophy}.
 
 As you have already noticed for every program/library, it is very important
 that the basics of the science and technique be explained in separate
-subsections prior to the `Invoking Programname' subsection. If you are
+subsections prior to the `Programname' subsection. If you are
 writing a new program or your addition to an existing program involves a
 new concept, also include such subsections and explain the concepts so a
 person completely unfamiliar with the concepts can get a general initial
@@ -32112,7 +32112,7 @@ after reading a long text, nothing else.
 relevant/interesting for the reader, there is no page number limit/cost.
 
 It might also help if you start discussing the usage of your idea in the
-`Invoking ProgramName' subsection (explaining the options and arguments you
+`ProgramName' subsection (explaining the options and arguments you
 have in mind) at this stage too. Actually starting to write it here will
 really help you later when you are coding.
 
